{ HBO2.RBT  Wound Healing and Hyperbaric Oxygenation Treatment Process Rulesrequires 		Bio.Primitive.T, Cell.T, Histo.T, Immune.T, HBO.Tmy.creator		rbtstart date:		070794063094			diseases and other related processes defined as bio.process--see				BIO.PRIMITIVE.T				070994			rules for separate macrophage activations/identities by zones				commented out				071194			slot/rule scrapheap created071294			rules for zone-specific macrophage activations implemented, comments				removed071794			Chamber cycle rules begun072094			First chamber cycle O2/air breathing periods rules completed and tested;				Chamber, O2/air, cell process rules ordering rearranged061695			( ( begins ( *patient *O2.Breathing ) true ) ) etc. changed to				( ( breathes ( *patient *100%.O2 ) true ) ) etc.061795			Patient pO2 values rules added;  chamber repressurization061795			Oxygenation range values added}\ _________________________________________________________ SUPPORT OBJECTS{	Supposedly in basic TSC nowc:	THEN.SAY	sub.of		information.slot	instance.of	rhs.func	i.take		sx	i.give		none	arguments	*something	algorithm	( display> *something say )}\ -------------------------------------------------HBO Process/Protocol rulesc:	Start.Dive.1	level				basic	sub.of				phys.process	instance.of			process.rule 	my.creator			rbt	context				HBO.wound.healing	if.actors			( ( patient ( *patient ) true )						  ( wound ( *wound ) true )						  ( hyperbaric.chamber ( *hyperbaric.chamber ) true )						  ( chamber.pressure ( *chamber.pressure ) true )						  ( normal.atmospheric.pressure ( *normal.atmospheric.pressure ) true )						  ( wound-healing.pressure ( *wound-healing.pressure ) true )						  ( Air ( *Air ) true )						  ( 100%.O2 ( *100%.O2 ) true )						  ( O2-Site1 ( *O2-Site1 ) true )						  ( O2-Site2 ( *O2-Site2 ) true )						  ( O2-Site3 ( *O2-Site3 ) true )						  ( O2-Site4 ( *O2-Site4 ) true ) )	if.relates			( ( located.in ( *patient *hyperbaric.chamber ) true )						  ( pressurized.to ( *hyperbaric.chamber *normal.atmospheric.pressure ) true )						  ( breathes ( *patient *Air ) true ) )	then.relates		( ( Begins.increase.to ( *chamber.pressure *wound-healing.pressure ) true )						  ( pressurized.to ( *hyperbaric.chamber *normal.atmospheric.pressure ) false ) )	then.say			" Patient placed in chamber, and pressurization begins. "c:	Continue.Pressurization.1	level				basic	sub.of				phys.process	instance.of			process.rule 	my.creator			rbt	context				HBO.wound.healing	if.actors			( ( patient ( *patient ) true )						  ( wound ( *wound ) true )						  ( hyperbaric.chamber ( *hyperbaric.chamber ) true )						  ( chamber.pressure ( *chamber.pressure ) true )						  ( normal.atmospheric.pressure ( *normal.atmospheric.pressure ) true )						  ( Air ( *Air ) true )						  ( 100%.O2 ( *100%.O2 ) true )						  ( wound-healing.pressure ( *wound-healing.pressure ) true )						  ( O2-Site1 ( *O2-Site1 ) true )						  ( O2-Site2 ( *O2-Site2 ) true )						  ( O2-Site3 ( *O2-Site3 ) true )						  ( O2-Site4 ( *O2-Site4 ) true ) )	if.relates			( ( located.in ( *patient *hyperbaric.chamber ) true )						  ( Begins.increase.to ( *chamber.pressure *wound-healing.pressure ) true )						  ( breathes ( *patient *Air ) true ) )	then.relates		( ( Continues.increase.to ( *chamber.pressure *wound-healing.pressure ) true )						  ( breathes ( *patient *Air ) true ) 						  ( Begins.increase.to ( *chamber.pressure *wound-healing.pressure ) false ) )	then.say			" Chamber pressurization continues. "c:	Finish.Pressurization.1	level				basic	sub.of				phys.process	instance.of			process.rule 	my.creator			rbt	context				HBO.wound.healing	if.actors			( ( patient ( *patient ) true )						  ( wound ( *wound ) true )						  ( hyperbaric.chamber ( *hyperbaric.chamber ) true )						  ( chamber.pressure ( *chamber.pressure ) true )						  ( Air ( *Air ) true )						  ( 100%.O2 ( *100%.O2 ) true )						  ( normal.atmospheric.pressure ( *normal.atmospheric.pressure ) true )						  ( O2-Site1 ( *O2-Site1 ) true )						  ( O2-Site2 ( *O2-Site2 ) true )						  ( O2-Site3 ( *O2-Site3 ) true )						  ( O2-Site4 ( *O2-Site4 ) true )						  ( wound-healing.pressure ( *wound-healing.pressure ) true ) )	if.relates			( ( located.in ( *patient *hyperbaric.chamber ) true )						  ( Continues.increase.to ( *chamber.pressure *wound-healing.pressure ) true )						  ( breathes ( *patient *Air ) true ) )	then.relates		( ( Reaches ( *chamber.pressure *wound-healing.pressure ) true )						  ( Holds.at ( *chamber.pressure *wound-healing.pressure ) true )						  ( breathes ( *patient *Air ) true ) 						  ( Continues.increase.to ( *chamber.pressure *wound-healing.pressure ) false ) )	then.say			" Chamber reaches wound-healing pressure [2.4 ATA]. "c:	Begin.Chamber.Repressurization	level				basic	sub.of				phys.process	instance.of			process.rule 	my.creator			rbt	context				HBO.wound.healing	if.actors			( ( patient ( *patient ) true )						  ( hyperbaric.chamber ( *hyperbaric.chamber ) true )						  ( chamber.pressure ( *chamber.pressure ) true )						  ( normal.atmospheric.pressure ( *normal.atmospheric.pressure ) true )						  ( wound-healing.pressure ( *wound-healing.pressure ) true )						  ( Air ( *Air ) true )						  ( 100%.O2 ( *100%.O2 ) true )						  ( O2-Site1 ( *O2-Site1 ) true )						  ( O2-Site2 ( *O2-Site2 ) true )						  ( O2-Site3 ( *O2-Site3 ) true )						  ( O2-Site4 ( *O2-Site4 ) true )						  ( Air.Break.1 ( *Air.Break.1 ) true )						  ( Air.Break.2 ( *Air.Break.2 ) true )						  ( Air.Break.3 ( *Air.Break.3 ) true )						  ( Air.Break.4 ( *Air.Break.4 ) true )						  ( O2.Breathing ( *O2.Breathing ) true )						  ( O2.Period.1 ( *O2.Period.1 ) true )						  						  ( O2.Period.2 ( *O2.Period.2 ) true )						  ( O2.Period.3 ( *O2.Period.3 ) true )						  ( O2.Period.4 ( *O2.Period.4 ) true )						  ( O2.Period.5 ( *O2.Period.5 ) true ) )	if.not.actors		( ( Repressurize ( *Repressurize ) true ) )	if.relates			( ( located.in ( *patient *hyperbaric.chamber ) true )	 					  ( Holds.at ( *chamber.pressure *wound-healing.pressure ) true )						  ( breathes ( *patient *100%.O2 ) true )						  ( finishes ( *patient *O2.Breathing ) true ) )	then.create			( *Air.Breathing *Repressurize )	then.actors			( ( Air.Breathing ( *Air.Breathing ) true )						  ( Repressurize ( *Repressurize ) true )						  ( O2.Breathing ( *O2.Breathing ) false ) )			then.relates		( ( finishes ( *patient *O2.Breathing ) false )						  ( breathes ( *patient *100%.O2 ) false )						  ( breathes ( *patient *Air ) true )						  ( Begins.decrease.to ( *chamber.pressure *normal.atmospheric.pressure ) true )						  ( Holds.at ( *chamber.pressure *wound-healing.pressure ) false ) )	then.say			" Patient begins breathing air, and chamber begins return to surface pressure. "c:	Continue.Repressurization.1	level				basic	sub.of				phys.process	instance.of			process.rule 	my.creator			rbt	context				HBO.wound.healing	if.actors			( ( patient ( *patient ) true )						  ( wound ( *wound ) true )						  ( hyperbaric.chamber ( *hyperbaric.chamber ) true )						  ( chamber.pressure ( *chamber.pressure ) true )						  ( normal.atmospheric.pressure ( *normal.atmospheric.pressure ) true )						  ( Air ( *Air ) true )						  ( 100%.O2 ( *100%.O2 ) true )						  ( wound-healing.pressure ( *wound-healing.pressure ) true )						  ( O2-Site1 ( *O2-Site1 ) true )						  ( O2-Site2 ( *O2-Site2 ) true )						  ( O2-Site3 ( *O2-Site3 ) true )						  ( O2-Site4 ( *O2-Site4 ) true ) )	if.relates			( ( located.in ( *patient *hyperbaric.chamber ) true )						  ( breathes ( *patient *Air ) true )						  ( Begins.decrease.to ( *chamber.pressure *normal.atmospheric.pressure ) true ) )	then.relates		( ( Continues.decrease.to ( *chamber.pressure *normal.atmospheric.pressure ) true )						  ( Begins.decrease.to ( *chamber.pressure *normal.atmospheric.pressure ) false ) )	then.say			" Chamber repressurization continues. "c:	Repressurization.Complete.1	level				basic	sub.of				phys.process	instance.of			process.rule 	my.creator			rbt	context				HBO.wound.healing	if.actors			( ( patient ( *patient ) true )						  ( wound ( *wound ) true )						  ( hyperbaric.chamber ( *hyperbaric.chamber ) true )						  ( chamber.pressure ( *chamber.pressure ) true )						  ( normal.atmospheric.pressure ( *normal.atmospheric.pressure ) true )						  ( Air ( *Air ) true )						  ( 100%.O2 ( *100%.O2 ) true )						  ( wound-healing.pressure ( *wound-healing.pressure ) true )						  ( O2-Site1 ( *O2-Site1 ) true )						  ( O2-Site2 ( *O2-Site2 ) true )						  ( O2-Site3 ( *O2-Site3 ) true )						  ( O2-Site4 ( *O2-Site4 ) true ) )	if.relates			( ( located.in ( *patient *hyperbaric.chamber ) true )						  ( breathes ( *patient *Air ) true )						  ( Continues.decrease.to ( *chamber.pressure *normal.atmospheric.pressure ) true ) )	then.create			( *HBO.treatment1 )	then.actors			( ( HBO.treatment1 ( *HBO.treatment1 ) true ) )	then.relates		( ( pressurized.to ( *hyperbaric.chamber *normal.atmospheric.pressure ) true )						  ( Continues.decrease.to ( *chamber.pressure *normal.atmospheric.pressure ) false ) )	then.say			" Chamber repressurization completed. "c:	HBO.Treatment.1.completed	level				basic	sub.of				phys.process	instance.of			SENSE.RULE   	my.creator			rbt	if.actors			( ( HBO.treatment1 ( *HBO.treatment1 ) true ) )	then.terminate		expansion	then.say			" HBO treatment 1 completed. "\ -------------------------------------------------Oxygenation Protocol rulesc:	Oxygen.Breathing.1	level				basic	sub.of				phys.process	instance.of			process.rule 	my.creator			rbt	context				HBO.wound.healing	if.actors			( ( patient ( *patient ) true )						  ( wound ( *wound ) true )						  ( hyperbaric.chamber ( *hyperbaric.chamber ) true )						  ( chamber.pressure ( *chamber.pressure ) true )						  ( Air ( *Air ) true )						  ( 100%.O2 ( *100%.O2 ) true )						  ( O2-Site1 ( *O2-Site1 ) true )						  ( O2-Site2 ( *O2-Site2 ) true )						  ( O2-Site3 ( *O2-Site3 ) true )						  ( O2-Site4 ( *O2-Site4 ) true ) 						  ( wound-healing.pressure ( *wound-healing.pressure ) true ) )	if.not.actors		( ( O2.Period.1 ( *O2.Period.1 ) true ) )	if.relates			( ( located.in ( *patient *hyperbaric.chamber ) true )						  ( Holds.at ( *chamber.pressure *wound-healing.pressure ) true )						  ( breathes ( *patient *Air ) true ) )			then.create			( *O2.Breathing *O2.Period.1 )	then.actors			( ( O2.Breathing ( *O2.Breathing ) true )						  ( O2.Period.1 ( *O2.Period.1 ) true ) )	then.relates		( ( breathes ( *patient *100%.O2 ) true )						  ( breathes ( *patient *Air ) false ) )	then.say			" Patient begins breathing 100% O2 at wound-healing pressure [Period 1]. "c:	Oxygen.Breathing.2	level				basic	sub.of				phys.process	instance.of			process.rule 	my.creator			rbt	context				HBO.wound.healing	if.actors			( ( patient ( *patient ) true )						  ( wound ( *wound ) true )						  ( hyperbaric.chamber ( *hyperbaric.chamber ) true )						  ( chamber.pressure ( *chamber.pressure ) true )						  ( wound-healing.pressure ( *wound-healing.pressure ) true )						  ( Air.Breathing ( *Air.Breathing ) true )						  ( Air.Break.1 ( *Air.Break.1 ) true )						  ( Air ( *Air ) true )						  ( 100%.O2 ( *100%.O2 ) true )						  ( O2-Site1 ( *O2-Site1 ) true )						  ( O2-Site2 ( *O2-Site2 ) true )						  ( O2-Site3 ( *O2-Site3 ) true )						  ( O2-Site4 ( *O2-Site4 ) true )						  ( O2.Period.1 ( *O2.Period.1 ) true ) )	if.not.actors		( ( O2.Period.2 ( *O2.Period.2 ) true ) )	if.relates			( ( located.in ( *patient *hyperbaric.chamber ) true )						  ( Holds.at ( *chamber.pressure *wound-healing.pressure ) true )						  ( breathes ( *patient *Air ) true ) )			then.create			( *O2.Breathing *O2.Period.2 )	then.actors			( ( O2.Breathing ( *O2.Breathing ) true )						  ( O2.Period.2 ( *O2.Period.2 ) true )						  ( Air.Breathing ( *Air.Breathing ) false ) )	then.relates		( ( breathes ( *patient *100%.O2 ) true )						  ( breathes ( *patient *Air ) false ) )	then.say			" Patient begins breathing 100% O2 at wound-healing pressure [Period 2]. "c:	Oxygen.Breathing.3	level				basic	sub.of				phys.process	instance.of			process.rule 	my.creator			rbt	context				HBO.wound.healing	if.actors			( ( patient ( *patient ) true )						  ( wound ( *wound ) true )						  ( hyperbaric.chamber ( *hyperbaric.chamber ) true )						  ( chamber.pressure ( *chamber.pressure ) true )						  ( wound-healing.pressure ( *wound-healing.pressure ) true )						  ( Air.Breathing ( *Air.Breathing ) true )						  ( Air.Break.1 ( *Air.Break.1 ) true )						  ( O2.Period.1 ( *O2.Period.1 ) true )						  ( Air.Break.2 ( *Air.Break.2 ) true )						  ( Air ( *Air ) true )						  ( 100%.O2 ( *100%.O2 ) true )						  ( O2-Site1 ( *O2-Site1 ) true )						  ( O2-Site2 ( *O2-Site2 ) true )						  ( O2-Site3 ( *O2-Site3 ) true )						  ( O2-Site4 ( *O2-Site4 ) true )						  ( O2.Period.2 ( *O2.Period.2 ) true ) )	if.not.actors		( ( O2.Period.3 ( *O2.Period.3 ) true ) )	if.relates			( ( located.in ( *patient *hyperbaric.chamber ) true )						  ( Holds.at ( *chamber.pressure *wound-healing.pressure ) true )						  ( breathes ( *patient *Air ) true ) )			then.create			( *O2.Breathing *O2.Period.3 )	then.actors			( ( O2.Breathing ( *O2.Breathing ) true )						  ( O2.Period.3 ( *O2.Period.3 ) true )						  ( Air.Breathing ( *Air.Breathing ) false ) )	then.relates		( ( breathes ( *patient *100%.O2 ) true )						  ( breathes ( *patient *Air ) false ) )	then.say			" Patient begins breathing 100% O2 at wound-healing pressure [Period 3]. "c:	Oxygen.Breathing.4	level				basic	sub.of				phys.process	instance.of			process.rule 	my.creator			rbt	context				HBO.wound.healing	if.actors			( ( patient ( *patient ) true )						  ( wound ( *wound ) true )						  ( hyperbaric.chamber ( *hyperbaric.chamber ) true )						  ( chamber.pressure ( *chamber.pressure ) true )						  ( wound-healing.pressure ( *wound-healing.pressure ) true )						  ( Air ( *Air ) true )						  ( 100%.O2 ( *100%.O2 ) true )						  ( Air.Breathing ( *Air.Breathing ) true )						  ( O2-Site1 ( *O2-Site1 ) true )						  ( O2-Site2 ( *O2-Site2 ) true )						  ( O2-Site3 ( *O2-Site3 ) true )						  ( O2-Site4 ( *O2-Site4 ) true )						  ( Air.Break.1 ( *Air.Break.1 ) true )						  ( O2.Period.1 ( *O2.Period.1 ) true )						  ( Air.Break.2 ( *Air.Break.2 ) true )						  ( O2.Period.2 ( *O2.Period.2 ) true )						  ( Air.Break.3 ( *Air.Break.3 ) true )						  ( O2.Period.3 ( *O2.Period.3 ) true ) )	if.not.actors		( ( O2.Period.4 ( *O2.Period.4 ) true ) )	if.relates			( ( located.in ( *patient *hyperbaric.chamber ) true )						  ( Holds.at ( *chamber.pressure *wound-healing.pressure ) true )						  ( breathes ( *patient *Air ) true ) )			then.create			( *O2.Breathing *O2.Period.4 )	then.actors			( ( O2.Breathing ( *O2.Breathing ) true )						  ( O2.Period.4 ( *O2.Period.4 ) true )						  ( Air.Breathing ( *Air.Breathing ) false ) )	then.relates		( ( breathes ( *patient *100%.O2 ) true )						  ( breathes ( *patient *Air ) false ) )	then.say			" Patient begins breathing 100% O2 at wound-healing pressure [Period 4]. "c:	Oxygen.Breathing.5	level				basic	sub.of				phys.process	instance.of			process.rule 	my.creator			rbt	context				HBO.wound.healing	if.actors			( ( patient ( *patient ) true )						  ( wound ( *wound ) true )						  ( hyperbaric.chamber ( *hyperbaric.chamber ) true )						  ( chamber.pressure ( *chamber.pressure ) true )						  ( wound-healing.pressure ( *wound-healing.pressure ) true )						  ( Air.Breathing ( *Air.Breathing ) true )						  ( Air ( *Air ) true )						  ( 100%.O2 ( *100%.O2 ) true )						  ( O2-Site1 ( *O2-Site1 ) true )						  ( O2-Site2 ( *O2-Site2 ) true )						  ( O2-Site3 ( *O2-Site3 ) true )						  ( O2-Site4 ( *O2-Site4 ) true )						  ( Air.Break.1 ( *Air.Break.1 ) true )						  ( O2.Period.1 ( *O2.Period.1 ) true )						  ( Air.Break.2 ( *Air.Break.2 ) true )						  ( O2.Period.2 ( *O2.Period.2 ) true )						  ( Air.Break.3 ( *Air.Break.3 ) true )						  ( O2.Period.3 ( *O2.Period.3 ) true )						  ( Air.Break.4 ( *Air.Break.4 ) true )						  ( O2.Period.4 ( *O2.Period.4 ) true ) )	if.not.actors		( ( O2.Period.5 ( *O2.Period.5 ) true ) )	if.relates			( ( located.in ( *patient *hyperbaric.chamber ) true )						  ( Holds.at ( *chamber.pressure *wound-healing.pressure ) true )						  ( breathes ( *patient *Air ) true ) )			then.create			( *O2.Breathing *O2.Period.5 )	then.actors			( ( O2.Breathing ( *O2.Breathing ) true )						  ( O2.Period.5 ( *O2.Period.5 ) true )						  ( Air.Breathing ( *Air.Breathing ) false ) )	then.relates		( ( breathes ( *patient *100%.O2 ) true )						  ( breathes ( *patient *Air ) false ) )	then.say			" Patient begins breathing 100% O2 at wound-healing pressure [Period 5]. "{  Probably not needed for the moment to get cycling.  Using begins.... *O2.Breathing.... abovec:	Oxygen.Breathing.1C	level				basic	sub.of				phys.process	instance.of			process.rule 	my.creator			rbt	context				HBO.wound.healing	if.actors			( ( patient ( *patient ) true )						  ( wound ( *wound ) true )						  ( hyperbaric.chamber ( *hyperbaric.chamber ) true )						  ( chamber.pressure ( *chamber.pressure ) true )						  ( Air ( *Air ) true )						  ( 100%.O2 ( *100%.O2 ) true )						  ( normal.atmospheric.pressure ( *normal.atmospheric.pressure ) true )						  ( wound-healing.pressure ( *wound-healing.pressure ) true )						  ( O2.Breathing ( *O2.Breathing ) true ) )	if.relates			( ( located.in ( *patient *hyperbaric.chamber ) true )						  ( Holds.at ( *chamber.pressure *wound-healing.pressure ) true )						  ( breathes ( *patient *100%.O2 ) true ) )	if.not.relates		( ( continues ( *patient *O2.Breathing ) true ) )			then.relates		( ( breathes ( *patient *100%.O2 ) false )						  ( continues ( *patient *O2.Breathing ) true ) )	then.say			" Patient continues breathing 100% O2 at wound-healing pressure. "}c:	Air.Break.1	level				basic	sub.of				phys.process	instance.of			process.rule 	my.creator			rbt	context				HBO.wound.healing	if.actors			( ( patient ( *patient ) true )						  ( hyperbaric.chamber ( *hyperbaric.chamber ) true )						  ( Air ( *Air ) true )						  ( 100%.O2 ( *100%.O2 ) true )						  ( chamber.pressure ( *chamber.pressure ) true )						  ( normal.atmospheric.pressure ( *normal.atmospheric.pressure ) true )						  ( wound-healing.pressure ( *wound-healing.pressure ) true )						  ( O2.Breathing ( *O2.Breathing ) true )						  ( O2-Site1 ( *O2-Site1 ) true )						  ( O2-Site2 ( *O2-Site2 ) true )						  ( O2-Site3 ( *O2-Site3 ) true )						  ( O2-Site4 ( *O2-Site4 ) true ) )	if.not.actors		( ( Air.Break.1 ( *Air.Break.1 ) true ) )	if.relates			( ( located.in ( *patient *hyperbaric.chamber ) true )	 					  ( Holds.at ( *chamber.pressure *wound-healing.pressure ) true )						  ( breathes ( *patient *100%.O2 ) true )						  ( finishes ( *patient *O2.Breathing ) true ) )	then.create			( *Air.Breathing *Air.Break.1 )	then.actors			( ( Air.Breathing ( *Air.Breathing ) true )						  ( Air.Break.1 ( *Air.Break.1 ) true )						  ( O2.Breathing ( *O2.Breathing ) false ) )			then.relates		( ( breathes ( *patient *100%.O2 ) false )						  ( breathes ( *patient *Air ) true ) )	then.say			" Patient breathes air at wound-healing pressure [Air Break 1]. "c:	Air.Break.2	level				basic	sub.of				phys.process	instance.of			process.rule 	my.creator			rbt	context				HBO.wound.healing	if.actors			( ( patient ( *patient ) true )						  ( hyperbaric.chamber ( *hyperbaric.chamber ) true )						  ( chamber.pressure ( *chamber.pressure ) true )						  ( normal.atmospheric.pressure ( *normal.atmospheric.pressure ) true )						  ( wound-healing.pressure ( *wound-healing.pressure ) true )						  ( Air ( *Air ) true )						  ( 100%.O2 ( *100%.O2 ) true )						  ( O2-Site1 ( *O2-Site1 ) true )						  ( O2-Site2 ( *O2-Site2 ) true )						  ( O2-Site3 ( *O2-Site3 ) true )						  ( O2-Site4 ( *O2-Site4 ) true )						  ( Air.Break.1 ( *Air.Break.1 ) true )						  ( O2.Breathing ( *O2.Breathing ) true )						  ( O2.Period.1 ( *O2.Period.1 ) true )						  						  ( O2.Period.2 ( *O2.Period.2 ) true ) )	if.not.actors		( ( Air.Break.2 ( *Air.Break.2 ) true ) )	if.relates			( ( located.in ( *patient *hyperbaric.chamber ) true )	 					  ( Holds.at ( *chamber.pressure *wound-healing.pressure ) true )						  ( breathes ( *patient *100%.O2 ) true )						  ( finishes ( *patient *O2.Breathing ) true ) )	then.create			( *Air.Breathing *Air.Break.2 )	then.actors			( ( Air.Breathing ( *Air.Breathing ) true )						  ( Air.Break.2 ( *Air.Break.2 ) true )						  ( O2.Breathing ( *O2.Breathing ) false ) )			then.relates		( ( breathes ( *patient *100%.O2 ) false )						  ( breathes ( *patient *Air ) true ) )	then.say			" Patient breathes air at wound-healing pressure [Air Break 2]. "c:	Air.Break.3	level				basic	sub.of				phys.process	instance.of			process.rule 	my.creator			rbt	context				HBO.wound.healing	if.actors			( ( patient ( *patient ) true )						  ( hyperbaric.chamber ( *hyperbaric.chamber ) true )						  ( chamber.pressure ( *chamber.pressure ) true )						  ( normal.atmospheric.pressure ( *normal.atmospheric.pressure ) true )						  ( wound-healing.pressure ( *wound-healing.pressure ) true )						  ( Air ( *Air ) true )						  ( 100%.O2 ( *100%.O2 ) true )						  ( O2-Site1 ( *O2-Site1 ) true )						  ( O2-Site2 ( *O2-Site2 ) true )						  ( O2-Site3 ( *O2-Site3 ) true )						  ( O2-Site4 ( *O2-Site4 ) true )						  ( Air.Break.1 ( *Air.Break.1 ) true )						  ( Air.Break.2 ( *Air.Break.2 ) true )						  ( O2.Breathing ( *O2.Breathing ) true )						  ( O2.Period.1 ( *O2.Period.1 ) true )						  						  ( O2.Period.2 ( *O2.Period.2 ) true )						  ( O2.Period.3 ( *O2.Period.3 ) true ) )	if.not.actors		( ( Air.Break.3 ( *Air.Break.3 ) true ) )	if.relates			( ( located.in ( *patient *hyperbaric.chamber ) true )	 					  ( Holds.at ( *chamber.pressure *wound-healing.pressure ) true )						  ( breathes ( *patient *100%.O2 ) true )						  ( finishes ( *patient *O2.Breathing ) true ) )	then.create			( *Air.Breathing *Air.Break.3 )	then.actors			( ( Air.Breathing ( *Air.Breathing ) true )						  ( Air.Break.3 ( *Air.Break.3 ) true )						  ( O2.Breathing ( *O2.Breathing ) false ) )			then.relates		( ( breathes ( *patient *100%.O2 ) false )						  ( breathes ( *patient *Air ) true ) )	then.say			" Patient breathes air at wound-healing pressure [Air Break 3]. "c:	Air.Break.4	level				basic	sub.of				phys.process	instance.of			process.rule 	my.creator			rbt	context				HBO.wound.healing	if.actors			( ( patient ( *patient ) true )						  ( hyperbaric.chamber ( *hyperbaric.chamber ) true )						  ( chamber.pressure ( *chamber.pressure ) true )						  ( normal.atmospheric.pressure ( *normal.atmospheric.pressure ) true )						  ( wound-healing.pressure ( *wound-healing.pressure ) true )						  ( Air ( *Air ) true )						  ( 100%.O2 ( *100%.O2 ) true )						  ( O2-Site1 ( *O2-Site1 ) true )						  ( O2-Site2 ( *O2-Site2 ) true )						  ( O2-Site3 ( *O2-Site3 ) true )						  ( O2-Site4 ( *O2-Site4 ) true )						  ( Air.Break.1 ( *Air.Break.1 ) true )						  ( Air.Break.2 ( *Air.Break.2 ) true )						  ( Air.Break.3 ( *Air.Break.3 ) true )						  ( O2.Breathing ( *O2.Breathing ) true )						  ( O2.Period.1 ( *O2.Period.1 ) true )						  						  ( O2.Period.2 ( *O2.Period.2 ) true )						  ( O2.Period.3 ( *O2.Period.3 ) true )						  ( O2.Period.4 ( *O2.Period.4 ) true ) )	if.not.actors		( ( Air.Break.4 ( *Air.Break.4 ) true ) )	if.relates			( ( located.in ( *patient *hyperbaric.chamber ) true )	 					  ( Holds.at ( *chamber.pressure *wound-healing.pressure ) true )						  ( breathes ( *patient *100%.O2 ) true )						  ( finishes ( *patient *O2.Breathing ) true ) )	then.create			( *Air.Breathing *Air.Break.4 )	then.actors			( ( Air.Breathing ( *Air.Breathing ) true )						  ( Air.Break.4 ( *Air.Break.4 ) true )						  ( O2.Breathing ( *O2.Breathing ) false ) )			then.relates		( ( breathes ( *patient *100%.O2 ) false )						  ( breathes ( *patient *Air ) true ) )	then.say			" Patient breathes air at wound-healing pressure [Air Break 4]. "\ -----------------------------------Patient Oxygenation Protocol rulesC:	Patient.Oxygenation.poor	level				basic	sub.of				phys.process	instance.of			process.rule 	my.creator			rbt	context				HBO.wound.healing	if.actors			( ( patient ( *patient ) true )						  ( hyperbaric.chamber ( *hyperbaric.chamber ) true )						  ( chamber.pressure ( *chamber.pressure ) true )						  ( normal.atmospheric.pressure ( *normal.atmospheric.pressure ) true )						  ( wound-healing.pressure ( *wound-healing.pressure ) true )						  ( Air ( *Air ) true )						  ( 100%.O2 ( *100%.O2 ) true )						  ( O2-Site1 ( *O2-Site1 ) true )						  ( O2-Site2 ( *O2-Site2 ) true )						  ( O2-Site3 ( *O2-Site3 ) true )						  ( O2-Site4 ( *O2-Site4 ) true )						  ( poor.level ( *poor.level ) true )						  ( fair.level ( *fair.level ) true )						  ( good.level ( *good.level ) true )						  ( very.good.level ( *very.good.level ) true )						  ( O2.Breathing ( *O2.Breathing ) true ) )	if.relates			( ( located.in ( *patient *hyperbaric.chamber ) true )	 					  ( Holds.at ( *chamber.pressure *wound-healing.pressure ) true )						  ( breathes ( *patient *100%.O2 ) true ) )	if.not.relates		( ( finishes ( *patient *O2.Breathing ) true ) )	then.states			( ( rises ( *O2-Site1 ) true ) )	then.relates		( ( rises.to ( *O2-Site1 *poor.level ) true )						  ( finishes ( *patient *O2.Breathing ) true ) )	then.say			" Patient breathes 100% O2 for a period, and TcP02 rises to 'poor' at site 1. "C:	Patient.Oxygenation.fair	level				basic	sub.of				phys.process	instance.of			process.rule 	my.creator			rbt	context				HBO.wound.healing	if.actors			( ( patient ( *patient ) true )						  ( hyperbaric.chamber ( *hyperbaric.chamber ) true )						  ( chamber.pressure ( *chamber.pressure ) true )						  ( normal.atmospheric.pressure ( *normal.atmospheric.pressure ) true )						  ( wound-healing.pressure ( *wound-healing.pressure ) true )						  ( Air ( *Air ) true )						  ( 100%.O2 ( *100%.O2 ) true )						  ( O2-Site1 ( *O2-Site1 ) true )						  ( O2-Site2 ( *O2-Site2 ) true )						  ( O2-Site3 ( *O2-Site3 ) true )						  ( O2-Site4 ( *O2-Site4 ) true )						  ( poor.level ( *poor.level ) true )						  ( fair.level ( *fair.level ) true )						  ( good.level ( *good.level ) true )						  ( very.good.level ( *very.good.level ) true )						  ( O2.Breathing ( *O2.Breathing ) true ) )	if.relates			( ( located.in ( *patient *hyperbaric.chamber ) true )	 					  ( Holds.at ( *chamber.pressure *wound-healing.pressure ) true )						  ( breathes ( *patient *100%.O2 ) true ) )	if.not.relates		( ( finishes ( *patient *O2.Breathing ) true ) )	then.states			( ( rises ( *O2-Site1 ) true ) )	then.relates		( ( rises.to ( *O2-Site1 *fair.level ) true )						  ( finishes ( *patient *O2.Breathing ) true ) )	then.say			" Patient breathes 100% O2 for a period, and TcP02 rises to 'fair' at site 1. "C:	Patient.Oxygenation.good	level				basic	sub.of				phys.process	instance.of			process.rule 	my.creator			rbt	context				HBO.wound.healing	if.actors			( ( patient ( *patient ) true )						  ( hyperbaric.chamber ( *hyperbaric.chamber ) true )						  ( chamber.pressure ( *chamber.pressure ) true )						  ( normal.atmospheric.pressure ( *normal.atmospheric.pressure ) true )						  ( wound-healing.pressure ( *wound-healing.pressure ) true )						  ( Air ( *Air ) true )						  ( 100%.O2 ( *100%.O2 ) true )						  ( O2-Site1 ( *O2-Site1 ) true )						  ( O2-Site2 ( *O2-Site2 ) true )						  ( O2-Site3 ( *O2-Site3 ) true )						  ( O2-Site4 ( *O2-Site4 ) true )						  ( poor.level ( *poor.level ) true )						  ( fair.level ( *fair.level ) true )						  ( good.level ( *good.level ) true )						  ( very.good.level ( *very.good.level ) true )						  ( O2.Breathing ( *O2.Breathing ) true ) )	if.relates			( ( located.in ( *patient *hyperbaric.chamber ) true )	 					  ( Holds.at ( *chamber.pressure *wound-healing.pressure ) true )						  ( breathes ( *patient *100%.O2 ) true ) )	if.not.relates		( ( finishes ( *patient *O2.Breathing ) true ) )	then.states			( ( rises ( *O2-Site1 ) true ) )	then.relates		( ( rises.to ( *O2-Site1 *good.level ) true )						  ( finishes ( *patient *O2.Breathing ) true ) )	then.say			" Patient breathes 100% O2 for a period, and TcP02 rises to 'good' at site 1. "C:	Patient.Oxygenation.very.good	level				basic	sub.of				phys.process	instance.of			process.rule 	my.creator			rbt	context				HBO.wound.healing	if.actors			( ( patient ( *patient ) true )						  ( hyperbaric.chamber ( *hyperbaric.chamber ) true )						  ( chamber.pressure ( *chamber.pressure ) true )						  ( normal.atmospheric.pressure ( *normal.atmospheric.pressure ) true )						  ( wound-healing.pressure ( *wound-healing.pressure ) true )						  ( Air ( *Air ) true )						  ( 100%.O2 ( *100%.O2 ) true )						  ( O2-Site1 ( *O2-Site1 ) true )						  ( O2-Site2 ( *O2-Site2 ) true )						  ( O2-Site3 ( *O2-Site3 ) true )						  ( O2-Site4 ( *O2-Site4 ) true )						  ( poor.level ( *poor.level ) true )						  ( fair.level ( *fair.level ) true )						  ( good.level ( *good.level ) true )						  ( very.good.level ( *very.good.level ) true )						  ( O2.Breathing ( *O2.Breathing ) true ) )	if.relates			( ( located.in ( *patient *hyperbaric.chamber ) true )	 					  ( Holds.at ( *chamber.pressure *wound-healing.pressure ) true )						  ( breathes ( *patient *100%.O2 ) true ) )	if.not.relates		( ( finishes ( *patient *O2.Breathing ) true ) )	then.states			( ( rises ( *O2-Site1 ) true ) )	then.relates		( ( rises.to ( *O2-Site1 *very.good.level ) true )						  ( finishes ( *patient *O2.Breathing ) true ) )	then.say			" Patient breathes 100% O2 for a period, and TcP02 rises to 'very good' at site 1. "{	======================= re/move comment brackets when rules ready !!!	======================= re/move comment brackets when rules ready !!! }{ SLOT SCRAPHEAP =================================================>>				  			<<=================================================	SLOT SCRAPHEAP	  }											  		