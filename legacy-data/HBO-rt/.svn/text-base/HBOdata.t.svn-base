{ HBOdata.t  HBO Data Management Definitionsrequires	Bio.Primitive.T, Cell.T, Histo.T, Immune.T, HBO.tmy.creator	rbtstart date:		060795060795		Initial definitions of measurements and data variables for blood gases			at different sites060895		Changed specific measurement site designators (e.g., RL=right leg) to			arbitrary (e.g., Site1)060895		Cur.affairs modified for HBO data definition; Make.state added, but not			modified; GET.NEXT.DATA and RUN.ENCODERS unmodified061595		Site measurement means added for O2 and CO2 maxima and minima}\ -----------------------------------BLOOD GAS DATA MEASUREMENTS AND VARIABLESc:	TCPO2		\ transcutaneous pO2	level		basic	sub.of		measurement\	unit		mm.Hg	my.creator	rbtc:	TCPCO2		\ transcutaneous pCO2	level		basic	sub.of		measurement\	unit		mm.Hg	my.creator	rbt	c:	O2-Site1		level		basic	sub.of		TCPO2	my.creator	rbtc:	O2-Site2		level		basic	sub.of		TCPO2	my.creator	rbtc:	O2-Site3		level		basic	sub.of		TCPO2	my.creator	rbtc:	O2-Site4		level		basic	sub.of		TCPO2	my.creator	rbtc:	CO2-Site1	\ left leg tcpCO2	level		basic	sub.of		TCPO2	my.creator	rbtc:	CO2-Site2	\ right leg tcpCO2	level		basic	sub.of		TCPO2	my.creator	rbtc:	CO2-Site3	\ left arm tcpCO2	level		basic	sub.of		TCPO2	my.creator	rbtc:	CO2-Site4	\ right arm tcpCO2	level		basic	sub.of		TCPO2	my.creator	rbt\ -----------------------------------HBO CYCLE VARIABLESc:	CYCLE1	level		basic	sub.of		thing	my.creator	rbtc:	CYCLE2	level		basic	sub.of		thing	my.creator	rbtc:	CYCLE3	level		basic	sub.of		thing	my.creator	rbtc:	CYCLE4	level		basic	sub.of		thing	my.creator	rbtc:	CYCLE5	level		basic	sub.of		thing	my.creator	rbtc:	TREATMENT1	level		basic	sub.of		thing	my.creator	rbtc:	TREATMENT2	level		basic	sub.of		thing	my.creator	rbtc:	TREATMENT3	level		basic	sub.of		thing	my.creator	rbtc:	TREATMENT4	level		basic	sub.of		thing	my.creator	rbtc:	TREATMENT5	level		basic	sub.of		thing	my.creator	rbt\ ------------------------------cycle 1 maxima and minimac:	O2-Site1-C1MAX		\ left leg tcpO2 cycle1 maximum	level		basic	sub.of		TCPO2	my.creator	rbtc:	O2-Site2-C1MAX		\ right leg tcpO2 cycle1 maximum	level		basic	sub.of		TCPO2	my.creator	rbtc:	O2-Site3-C1MAX		\ left arm tcpO2 cycle1 maximum	level		basic	sub.of		TCPO2	my.creator	rbtc:	O2-Site4-C1MAX		\ right arm tcpO2 cycle1 maximum	level		basic	sub.of		TCPO2	my.creator	rbtc:	CO2-Site1-C1MAX	\ left leg tcpCO2 cycle1 maximum	level		basic	sub.of		TCPCO2	my.creator	rbtc:	CO2-Site2-C1MAX	\ right leg tcpCO2 cycle1 maximum	level		basic	sub.of		TCPCO2	my.creator	rbtc:	CO2-Site3-C1MAX	\ left arm tcpCO2 cycle1 maximum	level		basic	sub.of		TCPCO2	my.creator	rbtc:	CO2-Site4-C1MAX	\ right arm tcpCO2 cycle1 maximum	level		basic	sub.of		TCPCO2	my.creator	rbtc:	O2-Site1-C1MIN		\ left leg tcpO2 cycle1 minimum	level		basic	sub.of		TCPO2	my.creator	rbtc:	O2-Site2-C1MIN		\ right leg tcpO2 cycle1 minimum	level		basic	sub.of		TCPO2	my.creator	rbtc:	O2-Site3-C1MIN	\ left arm tcpO2 cycle1 minimum	level		basic	sub.of		TCPO2	my.creator	rbtc:	O2-Site4-C1MIN	\ right arm tcpO2 cycle1 minimum	level		basic	sub.of		TCPO2	my.creator	rbtc:	CO2-Site1-C1MIN	\ left leg tcpCO2 cycle1 minimum	level		basic	sub.of		TCPCO2	my.creator	rbtc:	CO2-Site2-C1MIN	\ right leg tcpCO2 cycle1 minimum	level		basic	sub.of		TCPCO2	my.creator	rbtc:	CO2-Site3-C1MIN	\ left arm tcpCO2 cycle1 minimum	level		basic	sub.of		TCPCO2	my.creator	rbtc:	CO2-Site4-C1MIN	\ right arm tcpCO2 cycle1 minimum	level		basic	sub.of		TCPCO2	my.creator	rbt\ ---------------------------------Cycle 2 maxima and minimac:	O2-Site1-C2MAX		\ left leg tcpO2 cycle2 maximum	level		basic	sub.of		TCPO2	my.creator	rbtc:	O2-Site2-C2MAX		\ right leg tcpO2 cycle2 maximum	level		basic	sub.of		TCPO2	my.creator	rbtc:	O2-Site3-C2MAX		\ left arm tcpO2 cycle2 maximum	level		basic	sub.of		TCPO2	my.creator	rbtc:	O2-Site4-C2MAX		\ right arm tcpO2 cycle2 maximum	level		basic	sub.of		TCPO2	my.creator	rbtc:	CO2-Site1-C2MAX	\ left leg tcpCO2 cycle2 maximum	level		basic	sub.of		TCPCO2	my.creator	rbtc:	CO2-Site2-C2MAX	\ right leg tcpCO2 cycle2 maximum	level		basic	sub.of		TCPCO2	my.creator	rbtc:	CO2-Site3-C2MAX	\ left arm tcpCO2 cycle2 maximum	level		basic	sub.of		TCPCO2	my.creator	rbtc:	CO2-Site4-C2MAX	\ right arm tcpCO2 cycle2 maximum	level		basic	sub.of		TCPCO2	my.creator	rbtc:	O2-Site1-C2MIN		\ left leg tcpO2 cycle2 minimum	level		basic	sub.of		TCPO2	my.creator	rbtc:	O2-Site2-C2MIN		\ right leg tcpO2 cycle2 minimum	level		basic	sub.of		TCPO2	my.creator	rbtc:	O2-Site3-C2MIN	\ left arm tcpO2 cycle2 minimum	level		basic	sub.of		TCPO2	my.creator	rbtc:	O2-Site4-C2MIN	\ right arm tcpO2 cycle2 minimum	level		basic	sub.of		TCPO2	my.creator	rbtc:	CO2-Site1-C2MIN	\ left leg tcpCO2 cycle2 minimum	level		basic	sub.of		TCPCO2	my.creator	rbtc:	CO2-Site2-C2MIN	\ right leg tcpCO2 cycle2 minimum	level		basic	sub.of		TCPCO2	my.creator	rbtc:	CO2-Site3-C2MIN	\ left arm tcpCO2 cycle2 minimum	level		basic	sub.of		TCPCO2	my.creator	rbtc:	CO2-Site4-C2MIN	\ right arm tcpCO2 cycle2 minimum	level		basic	sub.of		TCPCO2	my.creator	rbt		\ ---------------------------------Cycle 3 maxima and minimac:	O2-Site1-C3MAX		\ left leg tcpO2 cycle3 maximum	level		basic	sub.of		TCPO2	my.creator	rbtc:	O2-Site2-C3MAX		\ right leg tcpO2 cycle3 maximum	level		basic	sub.of		TCPO2	my.creator	rbtc:	O2-Site3-C3MAX		\ left arm tcpO2 cycle3 maximum	level		basic	sub.of		TCPO2	my.creator	rbtc:	O2-Site4-C3MAX		\ right arm tcpO2 cycle3 maximum	level		basic	sub.of		TCPO2	my.creator	rbtc:	CO2-Site1-C3MAX	\ left leg tcpCO2 cycle3 maximum	level		basic	sub.of		TCPCO2	my.creator	rbtc:	CO2-Site2-C3MAX	\ right leg tcpCO2 cycle3 maximum	level		basic	sub.of		TCPCO2	my.creator	rbtc:	CO2-Site3-C3MAX	\ left arm tcpCO2 cycle3 maximum	level		basic	sub.of		TCPCO2	my.creator	rbtc:	CO2-Site4-C3MAX	\ right arm tcpCO2 cycle3 maximum	level		basic	sub.of		TCPCO2	my.creator	rbtc:	O2-Site1-C3MIN		\ left leg tcpO2 cycle3 minimum	level		basic	sub.of		TCPO2	my.creator	rbtc:	O2-Site2-C3MIN		\ right leg tcpO2 cycle3 minimum	level		basic	sub.of		TCPO2	my.creator	rbtc:	O2-Site3-C3MIN	\ left arm tcpO2 cycle3 minimum	level		basic	sub.of		TCPO2	my.creator	rbtc:	O2-Site4-C3MIN	\ right arm tcpO2 cycle3 minimum	level		basic	sub.of		TCPO2	my.creator	rbtc:	CO2-Site1-C3MIN	\ left leg tcpCO2 cycle3 minimum	level		basic	sub.of		TCPCO2	my.creator	rbtc:	CO2-Site2-C3MIN	\ right leg tcpCO2 cycle3 minimum	level		basic	sub.of		TCPCO2	my.creator	rbtc:	CO2-Site3-C3MIN	\ left arm tcpCO2 cycle3 minimum	level		basic	sub.of		TCPCO2	my.creator	rbtc:	CO2-Site4-C3MIN	\ right arm tcpCO2 cycle3 minimum	level		basic	sub.of		TCPCO2	my.creator	rbt	\ ---------------------------------Cycle 4 maxima and minimac:	O2-Site1-C4MAX		\ left leg tcpO2 cycle4 maximum	level		basic	sub.of		TCPO2	my.creator	rbtc:	O2-Site2-C4MAX		\ right leg tcpO2 cycle4 maximum	level		basic	sub.of		TCPO2	my.creator	rbtc:	O2-Site3-C4MAX		\ left arm tcpO2 cycle4 maximum	level		basic	sub.of		TCPO2	my.creator	rbtc:	O2-Site4-C4MAX		\ right arm tcpO2 cycle4 maximum	level		basic	sub.of		TCPO2	my.creator	rbtc:	CO2-Site1-C4MAX	\ left leg tcpCO2 cycle4 maximum	level		basic	sub.of		TCPCO2	my.creator	rbtc:	CO2-Site2-C4MAX	\ right leg tcpCO2 cycle4 maximum	level		basic	sub.of		TCPCO2	my.creator	rbtc:	CO2-Site3-C4MAX	\ left arm tcpCO2 cycle4 maximum	level		basic	sub.of		TCPCO2	my.creator	rbtc:	CO2-Site4-C4MAX	\ right arm tcpCO2 cycle4 maximum	level		basic	sub.of		TCPCO2	my.creator	rbtc:	O2-Site1-C4MIN		\ left leg tcpO2 cycle4 minimum	level		basic	sub.of		TCPO2	my.creator	rbtc:	O2-Site2-C4MIN		\ right leg tcpO2 cycle4 minimum	level		basic	sub.of		TCPO2	my.creator	rbtc:	O2-Site3-C4MIN	\ left arm tcpO2 cycle4 minimum	level		basic	sub.of		TCPO2	my.creator	rbtc:	O2-Site4-C4MIN	\ right arm tcpO2 cycle4 minimum	level		basic	sub.of		TCPO2	my.creator	rbtc:	CO2-Site1-C4MIN	\ left leg tcpCO2 cycle4 minimum	level		basic	sub.of		TCPCO2	my.creator	rbtc:	CO2-Site2-C4MIN	\ right leg tcpCO2 cycle4 minimum	level		basic	sub.of		TCPCO2	my.creator	rbtc:	CO2-Site3-C4MIN	\ left arm tcpCO2 cycle4 minimum	level		basic	sub.of		TCPCO2	my.creator	rbtc:	CO2-Site4-C4MIN	\ right arm tcpCO2 cycle4 minimum	level		basic	sub.of		TCPCO2	my.creator	rbt\ ---------------------------------Cycle 5 maxima and minimac:	O2-Site1-C5MAX		\ left leg tcpO2 cycle5 maximum	level		basic	sub.of		TCPO2	my.creator	rbtc:	O2-Site2-C5MAX		\ right leg tcpO2 cycle5 maximum	level		basic	sub.of		TCPO2	my.creator	rbtc:	O2-Site3-C5MAX		\ left arm tcpO2 cycle5 maximum	level		basic	sub.of		TCPO2	my.creator	rbtc:	O2-Site4-C5MAX		\ right arm tcpO2 cycle5 maximum	level		basic	sub.of		TCPO2	my.creator	rbtc:	CO2-Site1-C5MAX	\ left leg tcpCO2 cycle5 maximum	level		basic	sub.of		TCPCO2	my.creator	rbtc:	CO2-Site2-C5MAX	\ right leg tcpCO2 cycle5 maximum	level		basic	sub.of		TCPCO2	my.creator	rbtc:	CO2-Site3-C5MAX	\ left arm tcpCO2 cycle5 maximum	level		basic	sub.of		TCPCO2	my.creator	rbtc:	CO2-Site4-C5MAX	\ right arm tcpCO2 cycle5 maximum	level		basic	sub.of		TCPCO2	my.creator	rbtc:	O2-Site1-C5MIN		\ Site 1 tcpO2 cycle5 minimum	level		basic	sub.of		TCPO2	my.creator	rbtc:	O2-Site2-C5MIN		\ Site 2 tcpO2 cycle5 minimum	level		basic	sub.of		TCPO2	my.creator	rbtc:	O2-Site3-C5MIN		\ Site 3 tcpO2 cycle5 minimum	level		basic	sub.of		TCPO2	my.creator	rbtc:	O2-Site4-C5MIN		\ Site 4 tcpO2 cycle5 minimum	level		basic	sub.of		TCPO2	my.creator	rbtc:	CO2-Site1-C5MIN		\ Site 1 tcpCO2 cycle5 minimum	level		basic	sub.of		TCPCO2	my.creator	rbtc:	CO2-Site2-C5MIN		\ Site 2 tcpCO2 cycle5 minimum	level		basic	sub.of		TCPCO2	my.creator	rbtc:	CO2-Site3-C5MIN		\ Site 3 tcpCO2 cycle5 minimum	level		basic	sub.of		TCPCO2	my.creator	rbtc:	CO2-Site4-C5MIN		\ Site 4 tcpCO2 cycle5 minimum	level		basic	sub.of		TCPCO2	my.creator	rbt\ ---------------------------------Mean maxima and minimac:	O2-Site1-MeanMax		\ Site 1 tcpO2 mean maximum	level		basic	sub.of		TCPO2	my.creator	rbtc:	O2-Site2-MeanMax		\ Site 2 tcpO2 mean maximum	level		basic	sub.of		TCPO2	my.creator	rbtc:	O2-Site3-MeanMax		\ Site 3 tcpO2 mean maximum	level		basic	sub.of		TCPO2	my.creator	rbtc:	O2-Site4-MeanMax		\ Site 4 tcpO2 mean maximum	level		basic	sub.of		TCPO2	my.creator	rbtc:	O2-Site1-MeanMin		\ Site 1 tcpO2 mean minimum	level		basic	sub.of		TCPO2	my.creator	rbtc:	O2-Site2-MeanMin		\ Site 2 tcpO2 mean minimum	level		basic	sub.of		TCPO2	my.creator	rbtc:	O2-Site3-MeanMin		\ Site 3 tcpO2 mean minimum	level		basic	sub.of		TCPO2	my.creator	rbtc:	O2-Site4-MeanMin		\ Site 4 tcpO2 mean minimum	level		basic	sub.of		TCPO2	my.creator	rbtc:	CO2-Site1-MeanMax		\ Site 1 tcpCO2 mean maximum	level		basic	sub.of		TCPCO2	my.creator	rbtc:	CO2-Site2-MeanMax		\ Site 2 tcpCO2 mean maximum	level		basic	sub.of		TCPCO2	my.creator	rbtc:	CO2-Site3-MeanMax		\ Site 3 tcpCO2 mean maximum	level		basic	sub.of		TCPCO2	my.creator	rbtc:	CO2-Site4-MeanMax		\ Site 4 tcpCO2 mean maximum	level		basic	sub.of		TCPCO2	my.creator	rbtc:	CO2-Site1-MeanMin		\ Site 1 tcpCO2 mean minimum	level		basic	sub.of		TCPCO2	my.creator	rbtc:	CO2-Site2-MeanMin		\ Site 2 tcpCO2 mean minimum	level		basic	sub.of		TCPCO2	my.creator	rbtc:	CO2-Site3-MeanMin		\ Site 3 tcpCO2 mean minimum	level		basic	sub.of		TCPCO2	my.creator	rbtc:	CO2-Site4-MeanMin		\ Site 4 tcpCO2 mean minimum	level		basic	sub.of		TCPCO2	my.creator	rbt	\ ---------------------------DATA HANDLING DEFINITIONS{ ========================== TEMPORARILY WALLED OFF UNTIL EDITING COMPLETEDc:  DATA.FILE	sub.of				thing	instance.of 		data.base	my.creator			rbt	my.data				nil}\ This is the cur.affairs for the HBO oximetry data handling{c:	CUR.AFFAIRS				instance.of			episode	my.creator			rbt	my.lhs				if.states \ if.relates 	current.ep			nil		\ which episode is currently explaining data	next.ep				nil		\ the list of expected episode(s)	found.ep			nil		\ the actual ep just found	start.ep			nil		\ filled in at runtime (envisionment init condx)	cur.data			nil \ Default start conditions.	prev.data			nil	data.definition		( O2-Site1 O2-Site2 O2-Site3 O2-Site4 )	if.actors			nil		\ made the same as initial episode	if.relates			nil		\ differences of constants and measurements	if.states			nil	 	\ qualitative amounts and rates	index.ep			experiment.e1}\ ========================== {  This is the episode created from the previous cur.affairs. }{c:  PAST.AFFAIRS	instance.of			episode	my.creator			tsc	if.actors			nil	if.relates			nil	if.states			nil}		{  Takes a current value, a previous value and the definition and a list andgenerates a state statement such as ( INCREASING ( TM1 ) TRUE ) and adds itto the list.  Also will be used to evaluate states of differences such as (POSITIVE ( diff.T1T2 ) TRUE ) (not yet implemented). }{c:	MAKE.STATE	instance.of		flow.func	my.creator		fla	i.take			sx sx sx list	i.give			list	arguments		*prev  *cur  *defn *temp	my.vars			*temp		algorithm		( do 						( cond ( ( greater.than? *cur *prev )								( bindq *temp 										( cons ( list 'INCREASING 											( list *defn ) 'TRUE ) *temp ) ) )								( ( less.than? *cur *prev )									( bindq *temp 										( cons ( list 'DECREASING 											( list *defn ) 'TRUE ) *temp ) ) )								( T ( bindq *temp 									( cons ( list 'STEADY ( list  *defn ) 'TRUE ) *temp ) ) ) )						( return *temp ) ) }\	GET.NEXT.DATA\	Gets next data from FAKE.DATA frame and passes it to RUN.ENCODERS\	returns nil when no more data\	note: This is inactivated when using simulator.{		c:	GET.NEXT.DATA	instance.of	flow.func	my.creator	jp2	i.take		list		\ list of data to find next one	i.give		list	arguments	*data	my.vars		*result *truth *temp *list *diff1 *diff2 *diff3 	algorithm	( do	( bindq *truth F )						( bindq *list ( value.of 'FAKE.DATA 'MY.DATA ) )						( loop.until ( or? *truth ( null? *list ) )							( do	( bindq *temp ( first *list ) )									( bindq *list ( rest *list ) )									( bindq *truth ( same?  *temp *data ) ) ) )						( cond ( ( notnull? *list )								( bindq *result ( first *list ) ) 								( bindq *diff1 ( minus 								 	( first *result ) ( second *result ) ) )                   				( bindq *diff2 ( minus                    					( second *result ) ( third *result ) ) )                   				( bindq *diff3 ( minus                    					( first *result ) ( third *result ) ) )                   				( append *diff1 *result )                   				( append *diff2 *result )                   				( append *diff3 *result )                   				( bindq *set ( value.of 'SP1 'amount ) )                   				( append *set *result )                   				( append *time *result )                   				( display> " Got data: " log )                    				( display *data log )							    ( T ( bindq *result nil ) ) )						( return *result ) )}{ ================================RUN.ENCODERS Opens the serial port, moves contents of cur.data in cur.affairsto  prev.data slot; gets a new set of data from serial port or data file;passes data to fillin.affairs and puts data in Cur.data slot.       Currently it also adjusts setpoint upwards by ten degrees everytime it cyclesuntil setpoint =350 F.  This function will be replaced by  controller rulesas they are developed. }{ c:	RUN.ENCODERS        instance.of		flow.func        my.creator      fla        i.take          none        i.give          flag                   my.vars         *truth *cur *prev *set *done *frame        algorithm       ( do    ( display> " Running Encoders" print )\        			( stallfortime ) 					( open.sesame )\					( set.value 'sp1 'rate 10 )    					( bindq *truth F )					( bindq *done F )					( bindq *cur nil )    	    		( copy.frame 'CUR.AFFAIRS 'PAST.AFFAIRS )    	    		( bindq *prev ( value.of 'past.affairs 'cur.data ) )                	( display> "Prev.data:" print )                	( display> *prev print )                	( bindq *set ( value.of 'SP1 'amount ) )					( bindq *cur ( get.next.data ) )\								( display> "ok to here" print )					( fillin.affairs *cur )					( bindq *set ( value.of 'SP1 'amount ) ) 					( bindq *truth T )					( return *truth ) )========================== }