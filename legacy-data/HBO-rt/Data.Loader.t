{	Data.loader.t	TCM3 Data File Reading Procedures070195		first edits of TCM3/EXCEL format file-reading procedures}c:	TCM-Data.Array	sub.of		function	i.take		none	i.give		sx	arguments	none	my.vars		*TCM.array	algorithm	( setq *TCM.array ( create.array2 10000 4 ) ){ TCM-Readfile:  load O2 data from TCM3 spreadsheet files into 2D array *TCM-ARRAY				 Names of 4 data files stored in *files				 				flow:	initialize ( 0 ) *filenum *row *col variables				loop: open (*files first ) and read until no more files						loop line-read start; loop until eof							read line from file 0							store value at ( *TCM-ARRAY *col *row )							increment *row							--EOF--						CLOSE-FILE						*file = rest ( *files )						increment *filenum ; *col = *filenum						*row =O				any additional housekeeping				}			c:	TCM-Readfile	sub.of		function	i.take		list	i.give		none	arguments	*files	my.vars		*truth *eof *linebuffer *row *col *refnum *filenum *linenum *TCM.array	algorithm	( do					( display> "reading: " debug ) ( display *files debug )					( bindq *filenum 0 )					( bindq *row 0 )					( bindq *col 0 )					( loop.until ( null? *files )						( do ( bindq *refnum ( FILE-OPEN ( first *files ) ) )							( cond	( ( equal? *refnum 0 )							 	( display> "Cannot open file" debug ) )							( T	( do									( loop.until ( *eof )							 	( bindq *eof FILE-READLINE )							 	( if.true	( not? *eof ) 									( do	( bindq *linebuffer FILE-LISTLINE )											( ARRAY2! *TCM.array *col *row *linebufferH )											( bindq *col *filenum )											( bindq *row 0 )											( bindq *filenum ( plus ( 1 *filenum ) ) )							) ) ) )							\ EOF				  			( FILE-CLOSE )				  			( bindq *files ( rest *files ) 					) ) ) ) 				) ) 