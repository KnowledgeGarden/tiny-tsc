\ my.creator  jwp rbt\ -----------------------------------------\ virus.kb2		( male.splenocytes and emcv.mm)\ -----------------------------------------\\	editing and miscellaneous corrections by rbt 7/10-7/17/95\	issues of how to make cytokines if already present, and checking for time{c:	adhere->abuts	level				basic	sub.of				phys.process	instance.of			sense.rule	my.creator			JAR rbt	context				immunology	if.actors			( ( thing ( *t1 ) true )						  ( thing ( *t2 ) true ) ) 	if.relates			( ( adhere ( *t1 *t2 ) true ) ) 	then.relates		( ( abuts ( *t1 *t2 ) true ) ) c:	splenocyte.cell.types		level			basic		sub.of			idea		instance.of		process.rule	\ changed from sense.rule to reduce excessive firing		if.actors		( ( splenocyte ( *splenocyte ) true ) )		if.not.actors	( ( macrophage ( *macrophage ) true )						  \ ( helper.T-cell ( *helper.T-cell ) true )						  ( helper.T1-cell ( *helper.T1-cell ) true )						  ( helper.T2-cell ( *helper.T2-cell ) true )						  ( cytotoxic.T-cell ( *cytotoxic.T-cell ) true )						  ( B-cell ( *B-cell ) true )						  ( NK-cell ( *NK-cell ) true ) )		then.create		( *macrophage *helper.T1-cell *helper.T2-cell *cytotoxic.T-cell *B-cell *NK-cell )		then.actors		( ( macrophage ( *macrophage ) true )						  \ ( helper.T-cell ( *helper.T-cell ) true )						  ( helper.T1-cell ( *helper.T1-cell ) true )						  ( helper.T2-cell ( *helper.T2-cell ) true )						  ( cytotoxic.T-cell ( *cytotoxic.T-cell ) true )						  ( B-cell ( *B-cell ) true )						  ( NK-cell ( *NK-cell ) true ) )						  						  c:	aa.virus.abuts.macrophage	level			basic	sub.of			phys.process	instance.of 	process.rule 	if.actors 		( ( virus ( *emcv-mm ) true )					  ( macrophage ( *macrophage ) true ) )	if.not.actors	( ( abutted.macrophage ( *abutted.macrophage ) true ) )	then.create		( *abutted.macrophage )	then.actors   	( ( abutted.macrophage ( *abutted.macrophage ) true )					  \ ( virus ( *emcv-mm ) false ) 					  ( macrophage ( *macrophage ) false ) )	\ then.relates  ( ( abuts ( *emcv-mm *macrophage ) true ) )	\ then.states	( ( abutted ( *macrophage ) true ) )	then.say		" Virus abuts macrophage. "										  }c:  virus.binding.macrophage	level  				basic	sub.of				phys.process	instance.of 		process.rule \ popsim.rule	my.creator 			jwp njb rbt	context 			immunology 	if.actors			( ( virus ( *emcv-mm ) true )						  ( macrophage ( *macrophage ) true ) )	if.relates			( ( abuts ( *macrophage *emcv-mm ) true ) )	if.not.states		( ( bound ( *emcv-mm ) true ) )	if.not.relates  	( ( binds ( *macrophage *emcv-mm ) true ) )	then.states			( ( bound ( *emcv-mm ) true ) )			then.relates  		( ( binds ( *macrophage *emcv-mm) true ) )	then.say			" Virus binds to macrophage. "		c:	virus.penetrates.macrophage	level				basic	sub.of				phys.process	instance.of			process.rule 	if.actors			( ( macrophage ( *macrophage ) true )						  ( virus ( *emcv-mm ) true ) )	if.relates			( (  binds ( *macrophage *emcv-mm ) true ) )	if.not.relates		( ( penetrates ( *emcv-mm *macrophage ) true ) )	then.relates		( ( penetrates ( *emcv-mm *macrophage ) true ) )	then.say			" Virus penetrates macrophage. "		c:	virus.induces.macrophage	level				basic	sub.of				phys.process	instance.of			process.rule		if.actors			( ( macrophage ( *macrophage ) true )						  ( virus ( *emcv-mm ) true ) )	if.relates			( (  penetrates ( *emcv-mm *macrophage ) true ) )	if.not.states		( ( induced ( *macrophage ) true ) )	then.actors			( ( virus ( *emcv-mm ) false ) )	then.states			( ( induced ( *macrophage ) true ) )	then.say			" Virus induces macrophage. "									c:	virus.activates.macrophage	level				basic	sub.of				phys.process	instance.of			process.rule 		if.actors 			( ( macrophage ( *macrophage ) true ) )	if.states			( ( induced ( *macrophage ) true ) )	if.not.states		( ( activated ( *macrophage ) true ) )	then.create			( *0.hours )	then.actors			( ( 0.hours ( *0.hours ) true ) )	then.states			( ( activated ( *macrophage ) true ) )	then.say			" Virus activates macrophage. "		c:	ANTIGEN.PRESENTATION.M	level				basic	sub.of				phys.process	instance.of			process.rule \ popsim.rule	my.creator			rbt jwp	context				immunology	if.actors			( ( macrophage ( *macrophage ) true )						  ( 0.hours ( *0.hours ) true ) )	if.not.actors		( ( antigen ( *antigen ) true ) )	if.states			( ( activated ( *macrophage ) true ) )	if.not.relates		( ( presents ( *macrophage *antigen ) true ) )	then.create			( *antigen )	then.actors			( ( antigen ( *antigen ) true ) ) 	then.relates 		( ( presents ( *macrophage *antigen ) true ) )  	then.say			" Macrophage presents processed antigen. "		c: 	macroph.secretes.cyto.0	level				basic	sub.of				phys.process	instance.of			process.rule		if.actors 			( ( macrophage ( *macrophage ) true )						  ( male.mouse ( *male.mouse ) true )						  ( TGF-beta ( *TGF-beta ) true )		 				  ( TNF-alpha ( *TNF-alpha ) true ) 		 				  ( IL-12 ( *IL-12 ) true )		 				  ( IL-10 ( *IL-10 ) true )		 				  ( IL-8 ( *IL-8 ) true )		 				  ( IL-6 ( *IL-6 ) true )						  ( IL-1 ( *IL-1 ) true )						  ( 0.hours ( *0.hours ) true ) )	if.not.actors		( ( 3.hours ( *3.hours ) true )						  ( 6.hours ( *6.hours ) true )						  ( 9.hours ( *9.hours ) true )						  ( 24.hours ( *24.hours ) true ) )	if.states			( ( activated ( *macrophage ) true ) )	if.not.states 		( ( occurred ( *0.hours.macro.secretion ) true ) )	then.create    		( *0.hours.macro.secretion *3.hours )	then.actors 		( ( 0.hours.macro.secretion ( *0.hours.macro.secretion ) true )						  ( 3.hours ( *3.hours ) true )						  ( 0.hours ( *0.hours ) false ) )	then.states			( ( occurred ( *0.hours.macro.secretion ) true )						  ( 3.hours.post.activation ( *macrophage ) true )						  ( secreted ( *TGF-beta ) true )						  ( secreted ( *TNF-alpha ) true )						  ( secreted ( *IL-12 ) true )						  ( secreted ( *IL-10 ) true )						  ( secreted ( *IL-8 ) true )						  ( secreted ( *IL-6 ) true ) 						  ( secreted ( *IL-1 ) true )						  ( elapsed ( *0.hours ) true ) )	then.relates		( ( secretes ( *macrophage *TGF-beta ) true )						  ( secretes ( *macrophage *TNF-alpha ) true )						  ( secretes ( *macrophage *IL-12 ) true )						  ( secretes ( *macrophage *IL-10 ) true )						  ( secretes ( *macrophage  *IL-8 ) true )						  ( secretes ( *macrophage *IL-6 ) true ) 						  ( secretes ( *macrophage *IL-1 ) true ) )	then.say			" Macrophage secretes TGFb, TNFa, IL-12, IL10, IL-8, IL-6, IL-1 at 0 hours. "		 c: macroph.secretes.cyto.3	level				basic	sub.of				phys.process	instance.of			process.rule		if.actors 			( ( macrophage ( *macrophage ) true )						  ( male.mouse ( *male.mouse ) true ) 						  ( 3.hours ( *3.hours ) true )						  ( TGF-beta ( *TGF-beta ) true )		 				  ( TNF-alpha ( *TNF-alpha ) true ) 		 				  ( IL-12 ( *IL-12 ) true )		 				  ( IL-10 ( *IL-10 ) true )		 				  ( IL-8 ( *IL-8 ) true )		 				  ( IL-6 ( *IL-6 ) true )		 				  ( IL-1 ( *IL-1 ) true ) )	if.states			( ( activated ( *macrophage ) true )						  ( 3.hours.post.activation ( *macrophage ) true ) )	if.not.states 		( ( occurred ( *3.hours.macro.secretion ) true ) )	if.relates			( ( secretes ( *macrophage *TGF-beta ) true )						  ( secretes ( *macrophage *TNF-alpha ) true )						  ( secretes ( *macrophage *IL-12 ) true )						  ( secretes ( *macrophage *IL-10 ) true )						  ( secretes ( *macrophage  *IL-8 ) true )						  ( secretes ( *macrophage *IL-6 ) true ) 						  ( secretes ( *macrophage *IL-1 ) true ) ) 	then.create    		(  *3.hours.macro.secretion *6.hours )	then.actors			( ( 3.hours.macro.secretion ( *3.hours.macro.secretion ) true )						  ( 6.hours ( *6.hours ) true )		 				  ( 3.hours ( *3.hours ) false ) )	then.states    		( ( occurred ( *3.hours.macro.secretion ) true )						  ( 6.hours.post.activation ( *macrophage ) true )						  ( 3.hours.post.activation ( *macrophage ) false )						  ( secreted ( *TGF-beta ) false )						  ( secreted ( *TNF-alpha ) false )						  ( secreted ( *IL-10 ) false )						  ( secreted ( *IL-8 ) false )						  ( secreted ( *IL-6 ) false ) 						  ( secreted ( *IL-1 ) false ) )	then.relates		( ( secretes ( *macrophage *TGF-beta ) false )						  ( secretes ( *macrophage *TNF-alpha ) false )						  ( secretes ( *macrophage *IL-10 ) false )						  ( secretes ( *macrophage  *IL-8 ) false )						  ( secretes ( *macrophage *IL-6 ) false ) 						  ( secretes ( *macrophage *IL-1 ) false ) )  	then.say			" Activated macrophage secretes IL-12 at three hours post infection "		c:	macroph.secretes.cyto.6	level				basic	sub.of				phys.process	instance.of			process.rule		if.actors 			( (macrophage ( *macrophage ) true )						  ( male.mouse ( *male.mouse ) true ) 						  ( 6.hours ( *6.hours ) true ) 						  ( IL-12 ( *IL-12 ) true )		 				  ( IL-10 ( *IL-10 ) true ) )	if.states			( ( activated ( *macrophage ) true )						  ( 6.hours.post.activation ( *macrophage ) true ) )	if.not.states 		( ( occurred ( *6.hours.macro.secretion ) true ) )	if.relates			( ( secretes ( *macrophage *IL-10 ) false ) )	then.create    		( *6.hours.macro.secretion *9.hours )	then.actors			( ( 6.hours.macro.secretion ( *6.hours.macro.secretion ) true )						  ( 9.hours ( *9.hours ) true )						  ( 6.hours ( *6.hours ) false ) )	then.states    		( ( occurred ( *6.hours.macro.secretion ) true ) 						  ( 9.hours.post.activation ( *macrophage ) true )						  ( secreted ( *IL-12 ) true )						  ( secreted ( *IL-10 ) true )						  ( 6.hours.post.activation ( *macrophage ) false ) )	then.relates  		( ( secretes ( *macrophage *IL-10 ) true ) ) 	then.say			" Activated.macrophage secretes IL-12 and IL-10 at six hours post infection "				c:  macroph.secretes.cyto.9	level				basic	sub.of				phys.process	instance.of			process.rule		if.actors 			( ( macrophage ( *macrophage ) true )						  ( male.mouse ( *male.mouse ) true ) 						  ( 9.hours ( *9.hours ) true )						  ( IL-12 ( *IL-12 ) true )		 				  ( IL-10 ( *IL-10 ) true ) )	if.states			( ( activated ( *macrophage ) true )						  ( 9.hours.post.activation ( *macrophage ) true ) )	if.not.states 		( ( occurred ( *9.hours.macro.secretion ) true ) )	then.create  	  	( *9.hours.macro.secretion *24.hours )	then.actors			( ( 9.hours.macro.secretion ( *9.hours.macro.secretion ) true )						  ( 24.hours ( *24.hours ) true )		 				  ( 9.hours ( *9.hours ) false ) )	then.states    		( ( occurred ( *9.hours.macro.secretion ) true )						  ( 24.hours.post.activation ( *macrophage ) true )						  ( secreted ( *IL-12 ) false )						  ( secreted ( *IL-10 ) true )						  ( 9.hours.post.activation ( *macrophage ) false ) ) 	then.relates  	    ( ( secretes ( *macrophage *IL-12 ) false ) )	then.say			" Activated.macrophage secretes IL-10 and not IL-12 at nine hours post infection "				c:  macroph.secretes.cyto.24	level				basic	sub.of				phys.process	instance.of			process.rule		if.actors 			( ( macrophage ( *macrophage ) true )						  ( male.mouse ( *male.mouse ) true )						  ( 24.hours ( *24.hours ) true )		 				  ( IL-10 ( *IL-10 ) true ) )	if.states			( ( activated ( *macrophage ) true )						  ( 24.hours.post.activation ( *macrophage ) true ) )	if.not.states 		( ( occurred ( *24.hours.macro.secretion ) true ) )	then.states 		( ( occurred ( *24.hours.macro.secretion ) true ) )	then.actors			( ( 24.hours ( *24.hours ) false ) )	then.say			" Activated.macrophage secretes IL-10 at 24 hours post infection. "																													{		c:	ab.virus.abuts.helper.T1-cell	level				basic	sub.of				phys.process	instance.of 		process.rule 	if.actors			( ( virus ( *emcv-mm ) true )						( helper.T1-cell ( *helper.T1-cell ) true ) )	if.not.actors		( ( abutted.helper.T1-cell ( *abutted.helper.T1-cell ) true ) )	then.create			( *abutted.helper.T1-cell )	then.actors			( ( abutted.helper.T1-cell ( *abutted.helper.T1-cell ) true )						  \ ( virus ( *emcv-mm ) false ) 						  ( helper.T1-cell ( *helper.T1-cell ) false ) )	\ then.relates   	( ( abuts ( *helper.T1-cell *emcv-mm ) true ) )	\ then.states			( ( abutted ( *helper.T1-cell ) true ) )	then.say			" Virus abuts helper.T1-cell xyz "	}		c:  virus.binding.helper.T1-cell	level  				basic	sub.of				phys.process	instance.of			process.rule \ popsim.rule	my.creator			jwp njb	context				immunology	if.actors			( ( helper.T1-cell ( *helper.T1-cell ) true )						  ( virus ( *emcv-mm ) true ) )	if.relates			( ( abuts ( *helper.T1-cell *emcv-mm ) true ) )	if.not.states		( ( bound ( *emcv-mm ) true ) )	if.not.relates  	( ( binds ( *helper.T1-cell *emcv-mm ) true ) )	then.states			( ( bound ( *emcv-mm ) true ) )	then.relates  		( ( binds ( *helper.T1-cell *emcv-mm ) true ) )	then.say			" Virus binds to helper.T1-cell. "	c:	virus.penetrates.helper.T1-cell	level				basic	sub.of				phys.process	instance.of			process.rule 	if.actors			( ( helper.T1-cell ( *helper.T1-cell ) true )						  ( virus ( *emcv-mm ) true ) )	if.relates			( (  binds ( *helper.T1-cell *emcv-mm ) true ) )	if.not.relates		( ( penetrates ( *emcv-mm *helper.T1-cell ) true ) )	then.relates		( ( penetrates ( *emcv-mm *helper.T1-cell ) true ) )	then.say			" Virus penetrates helper.T1-cell."		c:	virus.induces.helper.T1-cell	level				basic	sub.of				phys.process	instance.of			process.rule	if.actors			( ( virus ( *emcv-mm ) true )						  ( helper.T1-cell ( *helper.T1-cell ) true ) )	if.relates			( (  penetrates ( *emcv-mm *helper.T1-cell ) true ) )	if.not.states		( ( induced ( **helper.T1-cell ) true ) )	then.actors			( ( virus ( *emcv-mm ) false ) )	then.states			( ( induced ( *helper.T1-cell ) true ) )	then.say			" Virus induces helper.T1-cell. "																		c:	virus.activates.helper.T1-cell	level				basic	sub.of				phys.process	instance.of			process.rule 		if.actors			( ( helper.T1-cell ( *helper.T1-cell ) true ) )	if.states			( ( induced ( *helper.T1-cell ) true ) )	if.not.states		( ( activated ( *helper.T1-cell ) true ) )	then.create			( *0.hours )	then.actors			( ( 0.hours ( *0.hours ) true ) )	then.states			( ( activated ( *helper.T1-cell ) true ) )	then.say			" Virus activates helper.T1-cell. "		c:	h.T1-cell.secretes.cytokine.0	level				basic	sub.of				phys.process	instance.of			process.rule		if.actors 			( ( helper.T1-cell ( *helper.T1-cell ) true )						  ( male.mouse ( *male.mouse ) true )						  ( TGF-beta ( *TGF-beta ) true )		 				  ( TNF-alpha ( *TNF-alpha ) true ) 		 				  ( IL-12 ( *IL-12 ) true )		 				  ( IL-10 ( *IL-10 ) true )		 				  ( IL-8 ( *IL-8 ) true )		 				  ( IL-6 ( *IL-6 ) true )		 				  ( IL-1 ( *IL-1 ) true )		 				  ( 0.hours ( *0.hours ) true ) )	if.not.actors		( ( 3.hours ( *3.hours ) true )						  ( 6.hours ( *6.hours ) true )						  ( 9.hours ( *9.hours ) true )						  ( 24.hours ( *24.hours ) true ) )	if.states			( ( activated ( *helper.T1-cell ) true ) )	if.not.states 		( ( occurred ( *0.hours.h.T1-cell.secretion ) true ) ) 	then.create    		( *0.hours.h.T1-cell.secretion *3.hours )	then.actors 		( ( 0.hours.h.T1-cell.secretion ( *0.hours.h.T1-cell.secretion ) true )						  ( 3.hours ( *3.hours ) true )						  ( 0.hours ( *0.hours ) false ) )	then.states			( ( occurred ( *0.hours.h.T1-cell.secretion ) true )						  ( 3.hours.post.activation ( *helper.T1-cell ) true )						  ( secreted ( *TGF-beta ) true )						  ( secreted ( *TNF-alpha ) true )						  ( secreted ( *IL-12 ) true )						  ( secreted ( *IL-10 ) true )						  ( secreted ( *IL-8 ) true )						  ( secreted ( *IL-6 ) true ) 						  ( secreted ( *IL-1 ) true ) )	then.relates		( ( secretes ( *helper.T1-cell *TGF-beta ) true )						  ( secretes ( *helper.T1-cell *TNF-alpha ) true )						  ( secretes ( *helper.T1-cell *IL-12 ) true )						  ( secretes ( *helper.T1-cell *IL-10 ) true )						  ( secretes ( *helper.T1-cell  *IL-8 ) true )						  ( secretes ( *helper.T1-cell *IL-6 ) true ) 						  ( secretes ( *helper.T1-cell *IL-1 ) true ) )	then.say			" Helper.T1-cell secretes TGFb, TNFa, IL-12, IL10, IL-8, IL-6, IL-1 at 0 hours. "		 c: h.T1-cell.secretes.cytokine.3	level				basic	sub.of				phys.process	instance.of			process.rule		if.actors 			( ( helper.T1-cell( *helper.T1-cell ) true )						  ( male.mouse ( *male.mouse ) true )						  ( 3.hours ( *3.hours ) true )						  ( TGF-beta ( *TGF-beta ) true )		 				  ( TNF-alpha ( *TNF-alpha ) true ) 		 				  ( IL-12 ( *IL-12 ) true )		 				  ( IL-10 ( *IL-10 ) true )		 				  ( IL-8 ( *IL-8 ) true )		 				  ( IL-6 ( *IL-6 ) true )		 				  ( IL-1 ( *IL-1 ) true ) )	if.states			( ( activated ( *helper.T1-cell ) true )						  ( 3.hours.post.activation ( *helper.T1-cell ) true ) )	if.relates			( ( secretes ( *helper.T1-cell *TGF-beta ) true )						  ( secretes ( *helper.T1-cell *TNF-alpha ) true )						  ( secretes ( *helper.T1-cell *IL-12 ) true )						  ( secretes ( *helper.T1-cell *IL-10 ) true )						  ( secretes ( *helper.T1-cell  *IL-8 ) true )						  ( secretes ( *helper.T1-cell *IL-6 ) true ) 						  ( secretes ( *helper.T1-cell *IL-1 ) true ) )	if.not.states 		( ( occurred ( *3.hours.h.T1-cell.secretion ) true ) ) 	then.create    		( *3.hours.h.T1-cell.secretion *6.hours )	then.actors			( ( 3.hours.h.T1-cell.secretion ( *3.hours.h.T1-cell.secretion ) true )						  ( 6.hours ( *6.hours ) true )		 				  ( 3.hours ( *3.hours ) false ) )	then.states    		( ( occurred ( *3.hours.h.T1-cell.secretion ) true )						  ( 6.hours.post.activation ( *helper.T1-cell ) true )						  ( 3.hours.post.activation ( *helper.T1-cell ) false )						  ( secreted ( *TGF-beta ) false )						  ( secreted ( *TNF-alpha ) false )						  ( secreted ( *IL-10 ) false )						  ( secreted ( *IL-8 ) false )						  ( secreted ( *IL-6 ) false ) 						  ( secreted ( *IL-1 ) false ) )	then.relates		( ( secretes ( *helper.T1-cell *TGF-beta ) false )						  ( secretes ( *helper.T1-cell *TNF-alpha ) false )						  ( secretes ( *helper.T1-cell *IL-10 ) false )						  ( secretes ( *helper.T1-cell  *IL-8 ) false )						  ( secretes ( *helper.T1-cell *IL-6 ) false ) 						  ( secretes ( *helper.T1-cell *IL-1 ) false ) ) 	then.say			" Activated helper.T1-cell secretes IL-12? at three hours post infection. "{ *** What is supposed to be secreted at 6 hours? }		c:	h.T1-cell.secretes.cytokine.6	level				basic	sub.of				phys.process	instance.of			process.rule		if.actors 			( ( helper.T1-cell ( *helper.T1-cell) true )						  ( male.mouse ( *male.mouse ) true )						  ( 6.hours ( *6.hours ) true )						  ( IL-12 ( *IL-12 ) true )		 				  ( IL-10 ( *IL-10 ) true ) )	if.states			( ( activated ( *helper.T1-cell ) true )						  ( 6.hours.post.activation ( *helper.T1-cell ) true ) )	if.relates			( ( secretes ( *helper.T1-cell *IL-10 ) false ) )	if.not.states 		( ( occurred ( *6.hours.h.T1-cell.secretion ) true ) )   	then.create    		(  *6.hours.h.T1-cell.secretion *9.hours )	then.actors			( ( 6.hours.h.T1-cell.secretion ( *6.hours.h.T1-cell.secretion ) true )						  ( 9.hours ( *9.hours ) true )		 				  ( 6.hours ( *6.hours ) false ) )	then.states    		( ( occurred ( *6.hours.h.T1-cell.secretion ) true )						  ( 9.hours.post.activation ( *helper.T1-cell ) true )						  ( 6.hours.post.activation ( *helper.T1-cell ) false )						  ( secreted ( *IL-10 ) true ) )	then.relates  		( ( secretes ( *helper.T1-cell *IL-10 ) true ) ) 	then.say			" Activated helper.T1-cell secretes IL-10 and IL-12 at six hours post infection. "				{ *** What do you want secreted at 9 hours? }c:	h.T1-cell.secretes.cytokine.9	level				basic	sub.of				phys.process	instance.of			process.rule		if.actors 			( ( helper.T1-cell ( *helper.T1-cell ) true )						  ( male.mouse ( *male.mouse ) true ) 						  ( 9.hours ( *9.hours ) true )						  ( IL-10 ( *IL-10 ) true )						  ( IL-12 ( *IL-12 ) true ) )	if.states			( ( activated ( *helper.T1-cell ) true )						  ( 9.hours.post.activation ( *helper.T1-cell ) true ) )	if.not.states 		( ( occurred ( *9.hours.h.T1-cell.secretion ) true ) )	then.create    		( *9.hours.h.T1-cell.secretion *12.hours )	then.actors			( ( 9.hours.h.T1-cell.secretion ( *9.hours.h.T1-cell.secretion ) true )						  ( 12.hours ( *12.hours ) true )						  ( 9.hours ( *9.hours ) false ) )	then.states    		( ( occurred ( *9.hours.h.T1-cell.secretion ) true )						  ( 12.hours.post.activation ( *helper.T1-cell ) true )						  ( 9.hours.post.activation ( *helper.T1-cell ) false ) )	then.relates   		( \ ( secretes ( *helper.T1-cell *IL-10 ) true )						  ( secretes ( *helper.T1-cell *IL-12 ) false ) ) 	then.say			"activated.helper.T1-cell secretes IL-10 at nine hours post infection "	c:	h.T1-cell.secretes.cyto.12	level				basic	sub.of				phys.process	instance.of			process.rule		if.actors 			( ( helper.T1-cell ( *helper.T1-cell ) true )						  ( male.mouse ( *male.mouse ) true ) 						  ( 12.hours ( *12.hours ) true ) )	if.states			( ( activated ( *helper.T1-cell ) true )						  ( 12.hours.post.activation ( *helper.T1-cell ) true ) )	if.not.states 		( ( occurred ( *12.hours.h.T1-cell.secretion ) true ) ) 	then.create    		(  *12.hours.h.T1-cell.secretion *24.hours )	then.actors			( ( 12.hours.h.T1-cell.secretion ( *12.hours.h.T1-cell.secretion ) true )						  ( 24.hours ( *24.hours ) true )		 				  ( 12.hours ( *12.hours ) false ) )	then.states    		( ( occurred ( *12.hours.h.T1-cell.secretion ) true ) 						  ( 24.hours.post.activation ( *helper.T1-cell ) true )						  ( 12.hours.post.activation ( *helper.T1-cell ) false ) )	\ then.relates   	( ( secretes ( *helper.T1-cell *IL-10 ) true ) )	then.say			" Activated.helper.T1-cell secretes IL-10, NOT IFN-G at twelve hours post infection. "			c: h.T1-cell.secretes.cyto.24	level				basic	sub.of				phys.process	instance.of			process.rule		if.actors 			( ( helper.T1-cell ( *helper.T1-cell ) true )						  ( male.mouse ( *male.mouse ) true ) 						  ( 24.hours ( *24.hours ) true ) )	if.states			( ( activated ( *helper.T1-cell ) true )						  ( 24.hours.post.activation ( *helper.T1-cell ) true ) )	if.not.states 		( ( occurred ( *24.hours.h.T1-cell.secretion ) true ) )	then.create			( *24.hours.h.T1-cell.secretion )	then.actors			( ( 24.hours.h.T1-cell.secretion ( *24.hours.h.T1-cell.secretion ) true ) 						  ( 24.hours ( *24.hours ) false ) )	then.states 		( ( occurred ( *24.hours.h.T1-cell.secretion ) true ) )  	\ then.relates   	( ( secretes ( *helper.T1-cell *IL-10 ) true ) ) 	then.say			" Activated.helper.T1-cell secretes IL-10? at 24 hours post infection "									{c:	ac.virus.abuts.helper.T2-cell	level				basic	sub.of				phys.process	instance.of 		process.rule 	if.actors 			( ( virus ( *emcv-mm ) true )						( helper.T2-cell ( *helper.T2-cell ) true ) )	if.not.actors		( ( abutted.helper.T2-cell ( *abutted.helper.T2-cell ) true ) )	then.create			( *abutted.helper.T2-cell )	then.actors			( ( abutted.helper.T2-cell ( *abutted.helper.T2-cell ) true )						  \ ( virus ( *emcv-mm ) false ) 						  ( helper.T2-cell ( *helper.T2-cell ) false ) )	\ then.relates		( ( abuts ( *helper.T2-cell *emcv-mm ) true ) )	\ then.states		( ( abutted ( *helper.T2-cell ) true ) )	then.say			" Virus abuts helper.T2-cell xyz "}				c:  virus.binding.helper.T2-cell	level  				basic	sub.of				phys.process	instance.of			process.rule \ popsim.rule	my.creator 			jwp njb rbt	context 			immunology	if.actors 			( ( virus ( *emcv-mm ) true ) 						  ( helper.T2-cell ( *helper.T2-cell ) true ) )	if.relates			( ( abuts ( *helper.T2-cell *emcv-mm ) true ) )	if.not.states		( ( bound ( *emcv-mm ) true ) )	if.not.relates  	( ( binds ( *helper.T2-cell *emcv-mm ) true ) )	then.states			( ( bound ( *emcv-mm ) true ) )			then.relates  		( ( binds ( *helper.T2-cell *emcv-mm ) true ) )	then.say			" Virus binds to helper.T2-cell. "										  c:	virus.penetrates.helper.T2-cell	level				basic	sub.of				phys.process	instance.of			process.rule 	if.actors			( ( helper.T2-cell ( *helper.T2-cell ) true )						  ( virus ( *emcv-mm ) true ) )	if.relates			( (  binds ( *helper.T2-cell *emcv-mm ) true ) )	if.not.relates		( ( penetrates ( *emcv-mm *helper.T2-cell ) true ) )	then.relates		( ( penetrates ( *emcv-mm *helper.T2-cell ) true ) )	then.say			" Virus penetrates helper.T2-cell. "		c:	virus.induces.helper.T2-cell	level				basic	sub.of				phys.process	instance.of			process.rule 		if.actors			( ( virus ( *emcv-mm ) true )						  ( helper.T2-cell ( *helper.T2-cell ) true ) )	if.relates			( (  penetrates ( *emcv-mm *helper.T2-cell ) true ) )	if.not.states		( ( induced ( *helper.T2-cell ) true ) )	then.actors			( ( virus ( *emcv-mm ) false ) )	then.states			( ( induced ( *helper.T2-cell ) true ) )	then.say			" Virus induces helper.T2-cell. "c:	virus.activates.helper.T2-cell	level				basic	sub.of				phys.process	instance.of			process.rule 		if.actors			( ( helper.T2-cell ( *helper.T2-cell ) true ) )	if.states			( ( induced ( *helper.T2-cell ) true ) )	if.not.states		( ( activated ( *helper.T2-cell ) true ) )	then.create			( *0.hours )	then.actors			( ( 0.hours ( *0.hours ) true ) )	then.states			( ( activated ( *helper.T2-cell ) true ) )	then.say			" Virus activates helper.T2-cell. "		c:	h.T2-cell.secretes.cyto.0	level				basic	sub.of				phys.process	instance.of			process.rule		if.actors 			( ( helper.T2-cell ( *helper.T2-cell ) true )						  ( male.mouse ( *male.mouse ) true )						  ( TGF-beta ( *TGF-beta ) true )		 				  ( TNF-alpha ( *TNF-alpha ) true ) 		 				  ( IL-12 ( *IL-12 ) true )		 				  ( IL-10 ( *IL-10 ) true )		 				  ( IL-8 ( *IL-8 ) true )		 				  ( IL-6 ( *IL-6 ) true )		 				  ( IL-1 ( *IL-1 ) true )		 				  ( 0.hours ( *0.hours ) true ) )	if.not.actors		( ( 3.hours ( *3.hours ) true )						  ( 6.hours ( *6.hours ) true )						  ( 9.hours ( *9.hours ) true )						  ( 24.hours ( *24.hours ) true ) )	if.states			( ( activated ( *helper.T2-cell ) true ) )	if.not.states 		( ( occurred ( *0.hours.h.T2-cell.secretion ) true ) ) 	then.create    		( *0.hours.h.T2-cell.secretion  *3.hours )	then.actors 		( ( 0.hours.h.T2-cell.secretion ( *0.hours.h.T2-cell.secretion ) true )						  ( 3.hours ( *3.hours ) true )						  ( 0.hours ( *0.hours ) false ) )	then.states			( ( occurred ( *0.hours.h.T2-cell.secretion ) true )						  ( 3.hours.post.activation ( *helper.T2-cell ) true )						  ( secreted ( *TGF-beta ) true )						  ( secreted ( *TNF-alpha ) true )						  ( secreted ( *IL-12 ) true )						  ( secreted ( *IL-10 ) true )						  ( secreted ( *IL-8 ) true )						  ( secreted ( *IL-6 ) true ) 						  ( secreted ( *IL-1 ) true ) )	then.relates		( ( secretes ( *helper.T2-cell *TGF-beta ) true )						  ( secretes ( *helper.T2-cell *TNF-alpha ) true )						  ( secretes ( *helper.T2-cell *IL-12 ) true )						  ( secretes ( *helper.T2-cell *IL-10 ) true )						  ( secretes ( *helper.T2-cell  *IL-8 ) true )						  ( secretes ( *helper.T2-cell *IL-6 ) true ) 						  ( secretes ( *helper.T2-cell *IL-1 ) true ) )	then.say			" Helper.T2-cell secretes TGFb, TNFa, IL-12, IL10, IL-8, IL-6, IL-1 at 0 hours. "		{  ***What cytokines do we want to secrete here? }		 c: h.T2-cell.secretes.cyto.3	level				basic	sub.of				phys.process	instance.of			process.rule		if.actors 			( ( helper.T2-cell ( *helper.T2-cell ) true )						  ( male.mouse ( *male.mouse ) true ) 						  ( 3.hours ( *3.hours ) true )						  ( TGF-beta ( *TGF-beta ) true )		 				  ( TNF-alpha ( *TNF-alpha ) true ) 		 				  ( IL-12 ( *IL-12 ) true )		 				  ( IL-10 ( *IL-10 ) true )		 				  ( IL-8 ( *IL-8 ) true )		 				  ( IL-6 ( *IL-6 ) true )		 				  ( IL-1 ( *IL-1 ) true ) )	if.states			( ( activated ( *helper.T2-cell ) true )						  ( 3.hours.post.activation ( *helper.T2-cell ) true ) )	if.not.states 		( ( occurred ( *3.hours.h.T2-cell.secretion ) true ) ) 	then.create    		( *3.hours.h.T2-cell.secretion *6.hours )	then.actors			( ( 3.hours.h.T2-cell.secretion ( *3.hours.h.T2-cell.secretion ) true )						  ( 6.hours ( *6.hours ) true )		 				  ( 3.hours ( *3.hours ) false ) )	then.states    		( ( occurred ( *3.hours.h.T2-cell.secretion ) true )						  ( 6.hours.post.activation ( *helper.T2-cell ) true )						  ( 3.hours.post.activation ( *helper.T2-cell ) false )						  ( secreted ( *TGF-beta ) false )						  ( secreted ( *TNF-alpha ) false )						  ( secreted ( *IL-10 ) false )						  ( secreted ( *IL-8 ) false )						  ( secreted ( *IL-6 ) false ) 						  ( secreted ( *IL-1 ) false ) )	then.relates		( ( secretes ( *helper.T2-cell *TGF-beta ) false )						  ( secretes ( *helper.T2-cell *TNF-alpha ) false )						  ( secretes ( *helper.T2-cell *IL-10 ) false )						  ( secretes ( *helper.T2-cell  *IL-8 ) false )						  ( secretes ( *helper.T2-cell *IL-6 ) false ) 						  ( secretes ( *helper.T2-cell *IL-1 ) false ) ) 	then.say			" Activated helper.T2-cell secretes IL-12? at three hours post infection "		c:	h.T2-cell.secretes.cyto.6	level				basic	sub.of				phys.process	instance.of			process.rule		if.actors 			( ( helper.T2-cell ( *helper.T2-cell ) true )						  ( male.mouse ( *male.mouse ) true )						  ( 6.hours ( *6.hours ) true )						  ( IL-12 ( *IL-12 ) true )		 				  ( IL-10 ( *IL-10 ) true ) )	if.states			( ( activated ( *helper.T2-cell ) true )						  ( 6.hours.post.activation ( *helper.T2-cell ) true ) )	if.relates			( ( secretes ( *helper.T2-cell *IL-12 ) true )						  ( secretes ( *helper.T2-cell *IL-10 ) false ) )	if.not.states 		( ( occurred ( *6.hours.h.T2-cell.secretion ) true ) )	then.create    		( *9.hours )	then.actors			( ( 6.hours.h.T2-cell.secretion ( *6.hours.h.T2-cell.secretion ) true )						  ( 9.hours ( *9.hours ) true )		 				  ( 6.hours ( *6.hours ) false ) )	then.states    		( ( occurred ( *6.hours.h.T2-cell.secretion ) true )						  ( 9.hours.post.activation ( *helper.T2-cell ) true )						  ( 6.hours.post.activation ( *helper.T2-cell ) false )						  ( secreted ( *IL-12 ) false )						  ( secreted ( *IL-10 ) true ) )		 				  	then.relates		( ( secretes ( *helper.T2-cell *IL-10 ) true ) ) 	then.say			"activated.helper.T2-cell secretes IL-10 at six hours post infection "				c:	h.T2-cell.secretes.cyto.9	level				basic	sub.of				phys.process	instance.of			process.rule		if.actors 			( ( helper.T2-cell ( *helper.T2-cell ) true )						  ( male.mouse ( *male.mouse ) true ) 						  ( 9.hours ( *9.hours ) true )						  ( IL-10 ( *IL-10 ) true ) )	if.states			( ( activated ( *helper.T2-cell ) true )						  ( 9.hours.post.activation ( *helper.T2-cell ) true ) )	if.not.states 		( ( occurred ( *9.hours.h.T2-cell.secretion ) true ) )	then.create			( *9.hours.h.T2-cell.secretion *12.hours  )	then.actors			( ( 9.hours.h.T2-cell.secretion ( *9.hours.h.T2-cell.secretion ) true )						  ( 12.hours ( *12.hours ) true )		 				  ( 9.hours ( *9.hours ) false ) )	then.states    		( ( occurred ( *9.hours.h.T2-cell.secretion ) true )						  ( 12.hours.post.activation ( *helper.T2-cell ) true )						  ( 9.hours.post.activation ( *helper.T2-cell ) false ) ) 	\ then.relates		( ( secretes ( *helper.T2-cell *IL-10 ) true ) )	then.say			"Activated.helper.T2-cell secretes IL-10 at nine hours post infection "	c:	h.T2-cell.secretes.cyto.12	level				basic	sub.of				phys.process	instance.of			process.rule		if.actors 			( ( helper.T2-cell ( *helper.T2-cell ) true )						  ( male.mouse ( *male.mouse ) true )						  ( 12.hours ( *12.hours ) true )						  ( IL-10 ( *IL-10 ) true ) )	if.states			( ( activated ( *helper.T2-cell ) true )						  ( 12.hours.post.activation ( *helper.T2-cell ) true ) )	if.not.states 		( ( occurred ( *12.hours.h.T2-cell.secretion ) true ) ) 	then.create    		(   *12.hours.h.T2-cell.secretion *24.hours )	then.actors			( ( 12.hours.h.T2-cell.secretion ( *12.hours.h.T2-cell.secretion ) true )						  ( 24.hours ( *24.hours ) true )		 			      ( twelve.hours ( *twelve.hours ) false ) ) 	then.states    		( ( occurred ( *12.hours.h.T2-cell.secretion ) true )						  ( 24.hours.post.activation ( *helper.T2-cell ) true )						  ( 12.hours.post.activation ( *helper.T2-cell ) false ) ) 	\ then.relates		( ( secretes ( *helper.T2-cell *IL-10 ) true ) )	then.say			"Activated.helper.T2-cell continues secreting IL-10, but not IFN-G at twelve hours post infection. "			c: h.T2-cell.secretes.cyto.24	level				basic	sub.of				phys.process	instance.of			process.rule		if.actors 			( ( helper.T2-cell ( *helper.T2-cell ) true )						  ( male.mouse ( *male.mouse ) true )						  ( 24.hours ( *24.hours ) true ) )	if.states			( ( activated ( *helper.T2-cell ) true )						  ( 24.hours.post.activation ( *helper.T2-cell ) true ) )	if.not.states 		( ( occurred ( *24.hours.h.T2-cell.secretion ) true ) )	then.create			( *24.hours.h.T2-cell.secretion )	then.actors			( ( 24.hours.h.T2-cell.secretion ( *24.hours.h.T2-cell.secretion ) true )						  ( 24.hours ( *24.hours ) false ) )	then.states 		( ( occurred ( *24.hours.h.T2-cell.secretion ) true ) )  	\ then.relates		( ( secretes ( *helper.T2-cell *IL-10 ) true ) )	then.say			" Activated.helper.T2-cell secretes IL-10 at 24 hours post infection "				{c:	ad.virus.abuts.cytotoxic.T-cell	level				basic	sub.of				phys.process	instance.of 		process.rule 	if.actors 			( ( virus ( *emcv-mm ) true )						  ( cytotoxic.T-cell ( *cytotoxic.T-cell ) true ) )	if.not.actors		( ( abutted.cytotoxic.T-cell ( *abutted.cytotoxic.T-cell ) true ) )	then.create			( *abutted.cytotoxic.T-cell )	then.actors			( ( abutted.cytotoxic.T-cell ( *abutted.cytotoxic.T-cell ) true ) 						  \ ( virus ( *emcv-mm ) false )						  ( cytotoxic.T-cell ( *cytotoxic.T-cell ) false ) )	\ then.relates		( ( abuts ( *cytotoxic.T-cell *emcv-mm ) true ) )	\ then.states		( ( abutted ( *cytotoxic.T-cell ) true ) )	then.say			"  virus abuts cytotoxic.T-cell xyz "}		c:  virus.binding.cytotoxic.T-cell	level  				basic	sub.of				phys.process	instance.of			process.rule \ popsim.rule	my.creator 			jwp njb rbt	context 			immunology 	if.actors			( ( virus ( *emcv-mm ) true )					  	  ( cytotoxic.T-cell ( *cytotoxic.T-cell ) true ) )	if.relates			( ( abuts ( *cytotoxic.T-cell *emcv-mm ) true ) )	if.not.states		( ( bound ( *emcv-mm ) true ) )	if.not.relates  	( ( binds ( *cytotoxic.T-cell *emcv-mm ) true ) )	then.states			( ( bound ( *emcv-mm ) true ) )			then.relates  		( ( binds ( *cytotoxic.T-cell *emcv-mm ) true ) )	then.say			" Virus binds to cytotoxic.T-cell. "		c:	virus.penetrates.cytotoxic.T-cell	level				basic	sub.of				phys.process	instance.of			process.rule 	if.actors			( ( cytotoxic.T-cell ( *cytotoxic.T-cell ) true )											  ( virus ( *emcv-mm ) true ) )	if.relates			( (  binds (  *cytotoxic.T-cell *emcv-mm ) true ) )	if.not.relates		( ( penetrates ( *emcv-mm  *cytotoxic.T-cell ) true ) )	then.relates		( ( penetrates ( *emcv-mm  *cytotoxic.T-cell ) true ) )	then.say			" Virus penetrates cytotoxic.T-cell."		c:	virus.induces.cytotoxic.T-cell	level				basic	sub.of				phys.process	instance.of			process.rule	if.actors			( ( virus ( *emcv-mm ) true )						  ( cytotoxic.T-cell ( *cytotoxic.T-cell ) true ) )	if.relates			( (  penetrates ( *emcv-mm *cytotoxic.T-cell ) true ) )	if.not.states		( ( induced ( *cytotoxic.T-cell ) true ) )	then.actors			( ( virus ( *emcv-mm ) false ) )	then.states			( ( induced ( *cytotoxic.T-cell ) true ) )	then.say			" Virus induces cytotoxic.T-cell."		c:	virus.activates.cytotoxic.T-cell	level				basic	sub.of				phys.process	instance.of			process.rule 		if.actors			( ( cytotoxic.T-cell ( *cytotoxic.T-cell ) true ) )	if.states			( ( induced ( *cytotoxic.T-cell ) true ) )	if.not.states		( ( activated ( *cytotoxic.T-cell ) true ) )	then.states			( ( activated ( *cytotoxic.T-cell ) true ) )	then.say			" Virus activates cytotoxic.T-cell."	{ *** What's this rule supposed to be doing? 		c: c.T-cell.secretes.cyto.0	level				basic	sub.of				phys.process	instance.of			process.rule		if.actors			( ( cytotoxic.T-cell ( *cytotoxic.T-cell ) true ) )	if.states			( ( activated ( *cytotoxic.T-cell ) true ) )	then.say			" Activated.cytotoxic.T-cell secretes ? cytokines"				}{c:	ae.virus.abuts.B-cell	level				basic	sub.of				phys.process	instance.of 		process.rule 	if.actors 			( ( virus ( *emcv-mm ) true )						  ( B-cell ( *B-cell ) true ) )	if.not.actors		( ( abutted.B-cell ( *abutted.B-cell ) true ) )	then.create			( *abutted.B-cell )	then.actors   		( ( abutted.B-cell ( *abutted.B-cell ) true )						  \ ( virus ( *emcv-mm ) false ) 						  ( B-cell ( *B-cell ) false ) )	\ then.relates  	( ( abuts ( *B-cell *emcv-mm ) true ) )	\ then.states   	( ( abutted ( *B-cell ) true ) )	then.say			" Virus abuts B-cell xyz "	}c:  virus.binding.B-cell	level  				basic	sub.of				phys.process	instance.of			process.rule \ popsim.rule	my.creator			jwp njb rbt	context				immunology	if.actors			( ( virus ( *emcv-mm ) true ) 						  ( B-cell ( *B-cell ) true ) )	if.relates			( ( abuts ( *B-cell *emcv-mm ) true ) )	if.not.states		( ( bound ( *emcv-mm ) true ) )	if.not.relates  	( ( binds ( *B-cell *emcv-mm ) true ) )	then.states			( ( bound ( *emcv-mm ) true ) )			then.relates  		( ( binds ( *B-cell *emcv-mm ) true ) )	then.say			" Virus binds to B-cell. "			c:	virus.penetrates.B-cell	level				basic	sub.of				phys.process	instance.of			process.rule 	if.actors			( ( virus ( *emcv-mm ) true )						  ( B-cell ( *B-cell ) true ) )	if.relates			( (  binds (  *B-cell *emcv-mm ) true ) )	if.not.relates		( ( penetrates ( *emcv-mm  *B-cell ) true ) )	then.relates		( ( penetrates ( *emcv-mm  *B-cell ) true ) )	then.say			" Virus penetrates B-cell. "		c:	virus.induces.B-cell	level				basic	sub.of				phys.process	instance.of			process.rule 		if.actors			( ( virus ( *emcv-mm ) true )						  ( B-cell ( *B-cell ) true ) )	if.relates			( (  penetrates ( *emcv-mm *B-cell ) true ) )	if.not.states		( ( induced ( *B-cell ) true ) )	then.actors			( ( virus ( *emcv-mm ) false ) )	then.states			( ( induced ( *B-cell ) true ) )	then.say			" Virus induces B-cell. "			c:	virus.activates.B-cell	level				basic	sub.of				phys.process	instance.of			process.rule 		if.actors			( ( B-cell ( *B-cell ) true ) )	if.states			( ( induced ( *B-cell ) true ) )	if.not.states		( ( activated ( *B-cell ) true ) )	then.states			( ( activated ( *B-cell ) true ) )	then.actors			( ( 0.hours ( *0.hours ) true ) )	then.say			" Virus activates B-cell. "											c:	B-cell.secretes.cyto.0	level				basic	sub.of				phys.process	instance.of			process.rule		if.actors 			( ( B-cell ( *B-cell ) true )						  ( male.mouse ( *male.mouse ) true )						   ( IL-1 ( *IL-1 ) true )						   ( 0.hours ( *0.hours ) true ) )	if.not.actors		( ( 3.hours ( *3.hours ) true )						  ( 6.hours ( *6.hours ) true )						  ( 9.hours ( *9.hours ) true )						  ( 24.hours ( *24.hours ) true ) )	if.states			( ( activated ( *B-cell ) true ) )	if.not.states 		( ( occurred ( *0.hours.B-cell.secretion ) true ) ) 	then.create    		(  *0.hours.B-cell.secretion *3.hours )	then.actors			( ( 3.hours ( *3.hours ) true )						  ( 0.hours.B-cell.secretion ( *0.hours.B-cell.secretion ) true )						  ( 0.hours ( *0.hours ) false ) )	then.states			( ( occurred ( *0.hours.B-cell.secretion ) true )						  ( 3.hours.post.activation ( *B-cell ) true ) 						  ( secreted ( *IL-1 ) true ) ) 	then.relates    	( ( secretes ( *B-cell *IL-1 ) true ) )	then.say			" Activated.B-cell secretes cytokines, including IL-1 "		c:	B-cell.secretes.cyto.3	level				basic	sub.of				phys.process	instance.of			process.rule		if.actors 			( ( B-cell ( *B-cell ) true )						  ( male.mouse ( *male.mouse ) true ) 						  ( 3.hours ( *3.hours ) true )						  ( IL-1 ( *IL-1 ) true )						  ( IL-12 ( *IL-12 ) true ) )	if.states			( ( activated ( *B-cell ) true )						  ( 3.hours.post.activation ( *B-cell ) true ) )	if.relates    		( ( secretes ( *B-cell *IL-1 ) true ) )	if.not.states 		( ( occurred ( *3.hours.B-cell.secretion ) true ) ) 	then.create    		( *3.hours.B-cell.secretion *6.hours )	then.actors			( ( 3.hours.B-cell.secretion ( *3.hours.B-cell.secretion ) true )						  ( 6.hours ( *6.hours ) true )		 				  ( 3.hours ( *3.hours ) false ) )	then.states    		( ( occurred ( *3.hours.B-cell.secretion ) true )						  ( 6.hours.post.activation ( *B-cell ) true )						  ( 3.hours.post.activation ( *B-cell ) false )						  ( secreted ( *IL-12 ) true )						  ( secreted ( *IL-1 ) false ) )	then.relates    	( ( secretes ( *B-cell *IL-12 ) true )						  ( secretes ( *B-cell *IL-1 ) false ) ) 	then.say			" Activated B-cell secretes IL-12 at three hours post infection "		c: B-cell.secretes.cyto.6	level				basic	sub.of				phys.process	instance.of			process.rule		if.actors 			( ( B-cell ( *B-cell ) true )						  ( male.mouse ( *male.mouse ) true ) 						  ( 6.hours ( *6.hours ) true )						  ( IL-12 ( *IL-12 ) true )						  ( IL-10 ( *IL-10 ) true ) )	if.states			( ( activated ( *B-cell ) true )						  ( 6.hours.post.activation ( *B-cell ) true ) )	if.relates    		( ( secretes ( *B-cell *IL-12 ) true )						  ( secretes ( *B-cell *IL-1 ) false ) )	if.not.states 		( ( occurred ( *6.hours.B-cell.secretion ) true ) )	then.create			( *6.hours.B-cell.secretion *9.hours  )	then.actors			( ( 6.hours.B-cell.secretion ( *6.hours.B-cell.secretion ) true )						  ( 9.hours ( *9.hours ) true )		 				  ( 6.hours ( *6.hours ) false ) )	then.states    		( ( occurred ( *6.hours.B-cell.secretion ) true )						  ( 9.hours.post.activation ( *B-cell ) true )						  ( 6.hours.post.activation ( *B-cell ) false )						  ( secreted ( *IL-12 ) true )						  ( secreted ( *IL-10 ) true ) )	then.relates		( \ ( secretes ( *B-cell *IL-12 ) true ) 						  ( secretes ( *B-cell *IL-10 ) true ) )	then.say			"activated.B-cell secretes IL-12 and IL-10 at six hours post infection "				c:	B-cell.secretes.cyto.9	level				basic	sub.of				phys.process	instance.of			process.rule		if.actors			( ( B-cell ( *B-cell ) true )						  ( male.mouse ( *male.mouse ) true ) 						  ( 9.hours ( *9.hours ) true )						  ( IL-12 ( *IL-12 ) true )						  ( IL-10 ( *IL-10 ) true ) )	if.states			( ( activated ( *B-cell ) true )						  ( 9.hours.post.activation ( *B-cell ) true ) )	if.not.states 		( ( occurred ( *9.hours.B-cell.secretion ) true ) ) 	then.create			( *9.hours.B-cell.secretion *24.hours )	then.actors			( ( 9.hours.B-cell.secretion ( *9.hours.B-cell.secretion ) true )						  ( 24.hours ( *24.hours ) true )		 				  ( 9.hours ( *9.hours ) false ) )	then.states    		( ( occurred ( *9.hours.B-cell.secretion ) true ) 						  ( 24.hours.post.activation ( *B-cell ) true )						  ( 9.hours.post.activation ( *B-cell ) false )						  ( secreted ( *IL-12 ) false )						  ( secreted ( *IL-10 ) true ) )	then.relates		( \ ( secretes ( *B-cell *IL-10 ) true )						  ( secretes ( *B-cell *IL-12 ) false ) )	then.say			" Activated.B-cell secretes IL-10 and not IL-12 at nine hours post infection "				c: B-cell.secretes.cyto.24	level				basic	sub.of				phys.process	instance.of			process.rule		if.actors 			( ( B-cell ( *B-cell ) true )						  ( male.mouse ( *male.mouse ) true ) 						  ( 24.hours ( *24.hours ) true )						  ( IL-10 ( *IL-10 ) true ) )	if.states			( ( activated ( *B-cell ) true )						  ( 24.hours.post.activation ( *B-cell ) true ) )	if.not.states 		( ( occurred ( *9.hours.B-cell.secretion ) true ) )	then.create			( *9.hours.B-cell.secretion )	then.actors			( ( 9.hours.B-cell.secretion ( *9.hours.B-cell.secretion ) true )	 					  ( 24.hours ( *24.hours ) false ) )	then.states 		( ( occurred ( *9.hours.B-cell.secretion ) true ) )	\ then.relates		( ( secretes ( *B-cell *IL-10 ) true ) )	then.say			"activated.B-cell secretes IL-10 at 24 hours post infection "																{	c:	af.virus.abuts.NK-cell	level				basic	sub.of				phys.process	instance.of			process.rule	if.actors			( ( virus ( *emcv-mm ) true )						  ( NK-cell ( *NK-cell ) true ) )	if.not.actors		( ( abutted.NK-cell ( *abutted.NK-cell ) true ) )	then.create			( *abutted.NK-cell )	then.actors			( ( abutted.NK-cell ( *abutted.NK-cell ) true ) 						\ ( virus ( *emcv-mm ) false )						( NK-cell ( *NK-cell ) false ) )	\ then.relates		( ( abuts ( *NK-cell *emcv-mm ) true ) )	\ then.states		( ( abutted ( *NK-cell ) true ) )	then.say			" Virus abuts NK-cell xyz. "}								  c:  virus.binding.NK-cell	level				basic	sub.of				phys.process	instance.of			process.rule  \ popsim.rule	my.creator			jwp njb rbt	context				immunology 	if.actors			( ( NK-cell ( *NK-cell ) true )						  ( virus ( *emcv-mm ) true ) )	if.relates			( ( abuts ( *NK-cell *emcv-mm ) true ) )	if.not.states		( ( bound ( *emcv-mm ) true ) )	if.not.relates  	( ( binds ( *NK-cell *emcv-mm ) true ) )	then.states			( ( bound ( *emcv-mm ) true ) )			then.relates  		( ( binds ( *NK-cell *emcv-mm ) true ) )	then.say			" Virus binds to NK-cell. "		c:	virus.penetrates.NK-cell	level				basic	sub.of				phys.process	instance.of			process.rule 	if.actors			( ( virus ( *emcv-mm ) true )						  ( NK-cell ( *NK-cell ) true ) )	if.relates			( (  binds ( *NK-cell *emcv-mm ) true ) )	if.not.relates		( ( penetrates ( *emcv-mm  *NK-cell ) true ) )	then.relates		( ( penetrates ( *emcv-mm  *NK-cell ) true ) )	then.say			" Virus penetrates NK-cell. "					c:	virus.induces.NK-cell	level				basic	sub.of				phys.process	instance.of			process.rule 		if.actors			( ( virus ( *emcv-mm ) true )						  ( NK-cell ( *NK-cell ) true ) )	if.relates			( (  penetrates ( *emcv-mm *NK-cell ) true ) )	if.not.states		( ( induced ( *NK-cell ) true ) )	then.actors			( ( virus ( *emcv-mm ) false ) )	then.states			( ( induced ( *NK-cell  ) true ) )	then.say			" Virus induces NK-cell."			c:	virus.activates.NK-cell	level				basic	sub.of				phys.process	instance.of			process.rule 		if.actors 			( ( NK-cell ( *NK-cell ) true ) )	if.states			( ( induced ( *NK-cell ) true ) )	if.not.states		( ( activated ( *NK-cell ) true ) )	then.create			( *0.hours )	then.actors			( ( 0.hours ( *0.hours ) true ) )	then.states			( ( activated ( *NK-cell ) true ) )	then.say			" Virus activates NK-cell."				{ *****  What are we going to have NK cell secrete?  IFN-gamma!!!! }c:	NK-cell.secretes.cytokine	level				basic	sub.of				phys.process	instance.of			process.rule		if.actors 			( ( NK-cell ( *NK-cell ) true )						  ( male.mouse ( *male.mouse ) true )						  ( IFN-gamma ( *IFN-gamma ) true )						  ( 0.hours ( *0.hours ) true ) )	if.not.actors		( ( 3.hours ( *3.hours ) true )						  ( 6.hours ( *6.hours ) true )						  ( 9.hours ( *9.hours ) true )						  ( 24.hours ( *24.hours ) true ) )	if.states			( ( activated ( *NK-cell ) true ) )	if.not.states 		( ( occurred ( *0.hours.NK-cell.secretion ) true ) )	then.create			( *0.hours.NK-cell.secretion )	then.actors			( ( 0.hours.NK-cell.secretion ( *0.hours.NK-cell.secretion ) true )						  ( 0.hours ( *0.hours ) false) )	then.states			( ( occurred ( *0.hours.NK-cell.secretion ) true )						  ( secreted ( *IFN-gamma ) true ) )	then.relates		( ( secretes ( *NK-cell *IFN-gamma ) true ) )	then.say			" Activated.NK-cell secretes IFN-gamma and other cytokines. "				{c:	increasing.quantity		instance.of 		sense.rule	if.actors			( ( quantity ( *quantity ) true ) )	\ if.relates		( ( increases ( *quantity ) true ) ) This is NOT A RELATION!	if.states			( ( increases ( *quantity ) true ) )	then.say     		" Quantity is increasing "		c:	decreasing.quantity	 	instance.of			sense.rule	if.actors			( ( quantity ( *quantity ) true ) )		if.relates			( ( decreases ( *quantity ) true ) ) This is NOT A RELATION!	if.states			( ( decreases ( *quantity ) true ) )	then.say     		" Quantity is decreasing " 	   }		