{	Binding.R		950303	jp2:	updates	}\ ____________________________________________________________ BINDING PROCESSEScomment:	the "no false actors" issue propagates to the rule below:	unless we have a sense.rule which creates abuttments, we need to just ignore	abuttments (read: assume they exist).  this because we cannot have the relation	in initial conditions because we cannot have the actors	we did one experiment in the metabolic pathways project with sense rules which	notice the presence of a pair of actors, and notice they don't abut, then make them abut	I'm not sure what that all means, or how it is different from the idea of just ignoring	abuttments altogether, as the example below does.comment;\ replacement antigen.binding, prevents multiple branches from arising as\ t- b-cell and macrophage rules fire separately{			  	   c:	antigen.BINDING.1	level		basic	subOf		phys.process	instanceOf	processRule 	myCreator	jp2	context		immunology	ifActors		( ( processed.antigen ( *antigen ) true )			  	  	  ( macrophage ( *macrophage ) true ) )	ifNotRelates	( ( binds ( *macrophage *antigen ) true ) )	ifStates		( ( activated ( *macrophage ) true ) )	thenRelates	( ( binds ( *macrophage *antigen ) true ) )	thenSay		" antigen bound to macrophage. " c:	antigen.BINDING.2	level		basic	subOf		phys.process	instanceOf	processRule 	myCreator	jp2	context		immunology	ifActors		( ( native.antigen ( *antigen ) true )				  	  ( antigen.specific.b-cell ( *b-cell ) true ) )	ifNotRelates	( ( binds ( *b-cell *antigen ) true ) )	thenRelates	( ( binds ( *b-cell *antigen ) true ) )	thenActors		( ( antigen.specific.b-cell ( *b-cell ) false )					  ( antigen.bound.b-cell ( *b-cell ) true ) )	thenSay		" antigen bound to  b-cell. " c:	HT.Proliferation	level		basic	subOf		phys.process	instanceOf	processRule 	myCreator	jp2	context		immunology	ifActors		( ( antigen.bound.b-cell ( *b-cell ) true )				  	  ( helper.t2-cell ( *t-cell ) true ) 				  	  ( il-4 ( *x ) true )				  	  ( il-5  ( *y ) true )				  	  ( il-6 ( *z ) true ) )	ifStates		( ( activated ( *t-cell ) true ) )	if.relates		( ( abuts ( *b-cell *t-cell ) true )					  ( abuts ( *b-cell *x ) true )					  ( abuts ( *b-cell *Y ) true ) )	thenCreate		( *a *b *c )	thenActors		( ( memory-cell ( *a ) true )					  ( antibody ( *b ) true )					  ( plasma-cell ( *c ) true ) )	thenStates		( ( proliferates ( *b-cell ) true ) )	thenSay		" antibody produced " c:	antigen.BINDING.2a	level			basic	subOf			phys.process	instanceOf		processRule 	myCreator		jp2	context			immunology	ifActors		( ( processed.antigen ( *antigen ) true )				  	  ( b-cell ( *b-cell ) true ) )	ifNotRelates	( ( presents ( *b-cell *antigen ) true ) )	if.relates		( ( abuts ( *b-cell *antigen ) true ) )	ifStates		( ( activated ( *b-cell ) true ) )	thenStates		( ( processes ( *b-cell *antigen ) true ) )	thenSay		" processed antigen processed by  b-cell. " c:	antigen.BINDING.3	level		basic	subOf		phys.process	instanceOf	processRule \ popsim.rule	myCreator	jp2	context		immunology	ifActors		( ( processed.antigen ( *antigen ) true )			 	  	  ( helper.t1-cell ( *helper.t-cell ) true ) )	ifNotRelates	( ( binds ( *helper.t-cell *antigen ) true ) )	if.relates		( ( abuts ( *antigen *helper.t-cell ) true ) )	thenRelates	( ( binds ( *helper.t-cell *antigen ) true ) )	thenSay		" antigen bound to helper t-cell. " }comment:	this rule does a good job of making an abuttment, but there may be a problem...	we cannot do an if.relates on something which does not exist	so we choose the ifNotRelates relationcomment;c:	activated.helper.t-cell.b-cell.ABUT.1	level			basic	subOf			phys.process	instanceOf		processRule	myCreator		jp2 rbt	context			human.immunology	ifActors		( ( b-cell ( *b-cell ) true )				 	  ( helper.t1-cell ( *helper.t1-cell ) true ) )	ifNotRelates 	( ( abuts ( *b-cell *helper.t1-cell ) true ) )	ifStates		( ( activated ( *helper.t1-cell ) true ) ) 	thenRelates 	( ( abuts ( *b-cell *helper.t1-cell ) true ) ) 	thenSay		" b-cell abuts activated helper T1-cell. "c:	activated.helper.t-cell.b-cell.ABUT.1a	level			basic	subOf			phys.process	instanceOf		processRule	myCreator		jp2 rbt	context			human.immunology	ifActors		( ( b-cell ( *b-cell ) true )				 	  ( helper.t2-cell ( *helper.t2-cell ) true ) )	ifNotRelates 	( ( abuts ( *b-cell *helper.t2-cell ) true ) )	ifStates		( ( activated ( *helper.t2-cell ) true ) ) 	thenRelates 	( ( abuts ( *b-cell *helper.t2-cell ) true ) ) 	thenSay		" b-cell abuts activated helper T2-cell. "\ I suspect this is wrong--I recall reading that the ht-cell gets activated when it antigen-binds\ to a macrophage or b-cell presenting hla and antigen parts\c:	activated.helper.t-cell.antigen.b-cell.BINDING.1	level			basic	subOf			phys.process 	instanceOf		processRule \ popsim.rule		\ jp2	myCreator		jp2 rbt	context			human.immunology	ifActors		( ( b-cell ( *b-cell ) true )				  	  ( antigen ( *antigen ) TRUE )	\ jp2 missing actor				 	  ( act.h.t-cell ( *act.h.t-cell ) true ) )	if.relates		( ( presents ( *b-cell *antigen ) true )				  	  ( abuts ( *b-cell *act.h.t-cell ) true ) )\	ifNotRelates  ( ( antigenBinds ( *act.h.t-cell *b-cell ) false ) ) 	ifNotRelates  ( ( antigenBinds ( *act.h.t-cell *b-cell ) true ) )	\ dhf	thenRelates 	( ( antigenBinds ( *act.h.t-cell *b-cell ) true ) )\	thenActors		( ( b.ab.t-cell ( *b-cell ) true ) )			\ jp2	thenSay		" Activated helper t-cell binds b-cell bound antigen."		\ _________________________________________ANTIBODY-PATHOGEN BINDING PROCESSES	\ next rule does not adress the fact that antigen is related--bound--to virusc:	antibody.VIRUS.antigen.BINDING.1	level		basic	subOf		phys.process	instanceOf	processRule \ popsim.rule	myCreator	jp2 rbt	context		human.immunology	ifActors		( ( antibody ( *antibody ) true )				 ( virus ( *virus ) true ) )	ifNotRelates ( ( binds ( *antibody *virus ) true ) )	\ added to make it run faster	thenRelates	( ( binds ( *antibody *virus ) true ) )	thenSay		" antibody binds to virus. "	