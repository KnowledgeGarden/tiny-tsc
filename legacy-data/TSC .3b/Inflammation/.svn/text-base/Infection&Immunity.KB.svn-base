{		Infection and Immunity.KB														startup		8/1/95																}\ =====================================================\		Infection&Immunity.KB\ =====================================================c:	adhere->abuts	level			basic	sub.of			phys.process	instance.of		sense.rule	my.creator		CLM DAV	context			immunology	if.actors		( ( thing ( *t1 ) true )					  ( thing ( *t2 ) true ) )	if.relates		( ( adhere ( *t1 *t2 ) true ) )	then.release	( ( abuts ( *t1 *t2 ) true ) )		c: particle.abuts.phagocyte   level			 basic   sub.of			 phys.process   instance.of		 process.rule   if.actors		 ( ( particle ( *particle ) true )   					   ( phagocyte ( *phagocyte ) true ) )   if.not.actors	 ( ( abutted.phagocyte ( *abutted.phagocyte ) true ) )   then.create	     ( *abutted.phagocyte )   then.actors	     ( ( abutted.phagocyte ( *abutted.phagocyte ) true )                       \ ( particle ( *particle ) false )                       ( phagocyte ( *phagocyte ) false ) )                                        \ then.relates ( ( abuts ( *particle *phagocyte ) true ) )    \ then.states  ( ( abutted ( *phagocyte ) true ) )    then.say       " Particle abutes phagocyte. "	      c:	particle.binding.phagocyte 	level				basic 	sub.of				phys.process 	instance.of			process.rule \ popsim.rule 	my.creator			CLM DAV 	context				immunology 	if.actors			( ( particle ( *particle ) true ) 	                      ( phagocyte ( *phagocyte ) true ) ) 	if.relates			( ( abuts ( *phagocyte *particle ) true ) ) 	if.not.states	    ( ( bound ( *particle ) true ) ) \ comment out this slot in ALL cell 	if.not.relates		( ( binds ( *phagocyte *particle ) true ) ) 	then.states         ( ( bound ( *particle) true ) ) 	then.relates        ( ( binds ( *phagocyte *particle) true ) ) 	then.say			" Particle binds to phagocyte. "  c:	infection.causes.disease 	level				basic 	sub.of				phys.process 	instance.of			process.rule 	my.creator			JAR 	context				immunology 	if actors			( ( infection ( *infection ) true ) 						  ( disease ( *disease ) true ) ) 	if.relates			( ( causes ( *infection *disease ) true ) ) 	if.not.actors	 	( ( immunity ( *immunity ) true ) ) 	then.create			( *immunity ) 	then.actor			( ( immunity ( *immunity ) true ) ) 	then.states			( ( leads.to ( *infection  *immunity) true ) ) 	then.say			"disease can lead to immunity"  	 c:	infection.causes.death 	level				basic 	sub.of				phys.process 	instance.of			process.rule 	my.creator			JAR 	context				immunology 	if.actors			( ( infection ( *infection ) true ) 						  ( disease ( *disease ) true ) ) 	if.relates			( ( causes ( *infection *disease ) true ) ) 	if.not.actors	 	( ( immunity ( *immunity ) true ) ) 	then.create			( *death ) 	then.actor			( ( death ( *death ) true ) ) 	then.states			( ( leads.to  ( *infection *death) true ) )  	then.say			"disease can cause death"  c: Koch's.postulate.1 	level			basic 	sub.of			phys.process 	instance.of		process rule	my.creator		NJB	context			immunology	if.actors		( ( microbe ( *microbe ) true )						( disease ( *disease ) true ) )	if.relates		( ( causes ( *microbe *disease ) true ) ) 				then.say		"microbe causes disease"	c:	Koch's.postulate.2	level			basic	sub.of			phys.process	instance.of		process rule	my.creator		NJB	context			immunology	if.actors		( ( microbe ( *microbe ) true )						( disease ( *disease ) true ) )		if.relates		( ( causes ( *microbe *disease ) true ) ) 	then.relates	( ( cultured.from  ( *microbe *disease ) true ) )	then.say		"isolated and cultured from disease"	c:	Koch's.postulate.3	level			basic	sub.of			phys.process	instance.of		process rule	my.creator		NJB	context			immunology 	if.actors		( ( microbe ( *microbe ) true )						( disease ( *disease ) true )						( susceptible.animal  ( *susceptible.animal ) true ) )	if.relates		( ( cultured.from ( *microbe *disease ) true ) )		then.relates	( ( causes.disease.in   ( *microbe *susceptible.animal ) true ) ) 					then.say		"isolated microbe causes disese in susceptible animal"	c:	Koch's.postulate.4a	level			basic	sub.of			phys.process	instance.of		process rule	my.creator		NJB	context			immunology 	if.actors		( ( microbe ( *microbe ) true )						( disease ( *disease ) true )						( susceptible.animal  ( *susceptible.animal ) true ) )	if.relates		( ( causes.disease.in  ( *microbe *susceptible.animal ) true ) )	then.relates	( ( cultured.from ( *microbe *susceptible.animal ) true ) )	then.say		"microbe isolated from susceptible animal"	c:	Koch's.postulate.4b	level			basic	sub.of			phys.process	instance.of		process rule	my.creator		NJB	context			immunology 	if.actors		( ( cultured.microbe ( *cultured.microbe ) true )						( disease.microbe  ( *disease.microbe) true )						( susceptible.animal  ( *susceptible.animal ) true ) )	if.relates		( ( cultured.from ( *cultured.microbe *susceptible.animal ) true ) )	then.relates	( ( identified.as ( *cultured.microbe *disease.microbe ) true ) )	then.say		"same microbe found in disease and in susceptible animal"									