{ HBO.RBT  Wound Healing and Hyperbaric Oxygenation Treatment Process Rulesrequires 		Bio.Primitive.T, Cell.T, Histo.T, Immune.T, HBO.TmyCreator		rbtstart date:		070794063094			diseases and other related processes defined as bio.process--see				BIO.PRIMITIVE.T				070994			rules for separate macrophage activations/identities by zones				commented out				071194			slot/rule scrapheap created071294			rules for zone-specific macrophage activations implemented, comments				removed071794			Chamber cycle rules begun072094			First chamber cycle O2/air breathing periods rules completed and tested;				Chamber, O2/air, cell process rules ordering rearranged}\ _________________________________________________________ SUPPORT OBJECTSc:	thenSay	subOf		informationSlot	instanceOf	rhs.func	iTake		sx	iGive		none	arguments	*something	algorithm	( display> *something say )\ -------------------------------------------------HBO Process/Protocol rulesc:	Start.Dive.1	level				basic	subOf				phys.process	instanceOf			process.rule 	myCreator			rbt	context				HBO.wound.healing	ifActors			( ( patient ( *patient ) true )						  ( wound ( *wound ) true )						  ( hyperbaric.chamber ( *hyperbaric.chamber ) true )						  ( chamber.pressure ( *chamber.pressure ) true )						  ( normal.atmospheric.pressure ( *normal.atmospheric.pressure ) true )						  ( wound-healing.pressure ( *wound-healing.pressure ) true ) )	ifRelates			( ( located.in ( *patient *hyperbaric.chamber ) true )						  ( pressurized.to ( *hyperbaric.chamber *normal.atmospheric.pressure ) true ) )	thenRelates		( ( Begins.increase.to ( *chamber.pressure *wound-healing.pressure ) true )						  ( pressurized.to ( *hyperbaric.chamber *normal.atmospheric.pressure ) false ) )	thenSay			" Patient placed in chamber, and pressurization begins. "c:	Continue.Pressurization.1	level				basic	subOf				phys.process	instanceOf			process.rule 	myCreator			rbt	context				HBO.wound.healing	ifActors			( ( patient ( *patient ) true )						  ( wound ( *wound ) true )						  ( hyperbaric.chamber ( *hyperbaric.chamber ) true )						  ( chamber.pressure ( *chamber.pressure ) true )						  ( normal.atmospheric.pressure ( *normal.atmospheric.pressure ) true )						  ( wound-healing.pressure ( *wound-healing.pressure ) true ) )	ifRelates			( ( located.in ( *patient *hyperbaric.chamber ) true )						  ( Begins.increase.to ( *chamber.pressure *wound-healing.pressure ) true ) )	thenRelates		( ( Continues.increase.to ( *chamber.pressure *wound-healing.pressure ) true ) 						  ( Begins.increase.to ( *chamber.pressure *wound-healing.pressure ) false ) )	thenSay			" Chamber pressurization continues. "c:	Finish.Pressurization.1	level				basic	subOf				phys.process	instanceOf			process.rule 	myCreator			rbt	context				HBO.wound.healing	ifActors			( ( patient ( *patient ) true )						  ( wound ( *wound ) true )						  ( hyperbaric.chamber ( *hyperbaric.chamber ) true )						  ( chamber.pressure ( *chamber.pressure ) true )						  ( normal.atmospheric.pressure ( *normal.atmospheric.pressure ) true )						  ( wound-healing.pressure ( *wound-healing.pressure ) true ) )	ifRelates			( ( located.in ( *patient *hyperbaric.chamber ) true )						  ( Continues.increase.to ( *chamber.pressure *wound-healing.pressure ) true ) )	thenRelates		( ( Reaches ( *chamber.pressure *wound-healing.pressure ) true )						  ( Holds.at ( *chamber.pressure *wound-healing.pressure ) true ) 						  ( Continues.increase.to ( *chamber.pressure *wound-healing.pressure ) false ) )	thenSay			" Chamber reaches wound-healing pressure [2.4 ATA]. "\ -------------------------------------------------Oxygenation Protocol rulesc:	Oxygen.Breathing.1	level				basic	subOf				phys.process	instanceOf			process.rule 	myCreator			rbt	context				HBO.wound.healing	ifActors			( ( patient ( *patient ) true )						  ( wound ( *wound ) true )						  ( hyperbaric.chamber ( *hyperbaric.chamber ) true )						  ( chamber.pressure ( *chamber.pressure ) true ) 						  ( wound-healing.pressure ( *wound-healing.pressure ) true ) )	ifNotActors		( ( O2.Period.1 ( *O2.Period.1 ) true ) )	ifRelates			( ( located.in ( *patient *hyperbaric.chamber ) true )						  ( Holds.at ( *chamber.pressure *wound-healing.pressure ) true ) )			thenCreate			( *O2.Breathing *O2.Period.1 )	thenActors			( ( O2.Breathing ( *O2.Breathing ) true )						  ( O2.Period.1 ( *O2.Period.1 ) true ) )	thenRelates		( ( begins ( *patient *O2.Breathing ) true ) )	thenSay			" Patient begins breathing 100% O2 at wound-healing pressure [Period 1]. "c:	Oxygen.Breathing.2	level				basic	subOf				phys.process	instanceOf			process.rule 	myCreator			rbt	context				HBO.wound.healing	ifActors			( ( patient ( *patient ) true )						  ( wound ( *wound ) true )						  ( hyperbaric.chamber ( *hyperbaric.chamber ) true )						  ( chamber.pressure ( *chamber.pressure ) true )						  ( wound-healing.pressure ( *wound-healing.pressure ) true )						  ( Air.Breathing ( *Air.Breathing ) true )						  ( Air.Break.1 ( *Air.Break.1 ) true )						  ( O2.Period.1 ( *O2.Period.1 ) true ) )	ifNotActors		( ( O2.Period.2 ( *O2.Period.2 ) true ) )	ifRelates			( ( located.in ( *patient *hyperbaric.chamber ) true )						  ( Holds.at ( *chamber.pressure *wound-healing.pressure ) true )						  ( begins ( *patient *Air.Breathing ) true ) )			thenCreate			( *O2.Breathing *O2.Period.2 )	thenActors			( ( O2.Breathing ( *O2.Breathing ) true )						  ( O2.Period.2 ( *O2.Period.2 ) true )						  ( Air.Breathing ( *Air.Breathing ) false ) )	thenRelates		( ( begins ( *patient *O2.Breathing ) true )						  ( begins ( *patient *Air.Breathing ) false ) )	thenSay			" Patient begins breathing 100% O2 at wound-healing pressure [Period 2]. "c:	Oxygen.Breathing.3	level				basic	subOf				phys.process	instanceOf			process.rule 	myCreator			rbt	context				HBO.wound.healing	ifActors			( ( patient ( *patient ) true )						  ( wound ( *wound ) true )						  ( hyperbaric.chamber ( *hyperbaric.chamber ) true )						  ( chamber.pressure ( *chamber.pressure ) true )						  ( wound-healing.pressure ( *wound-healing.pressure ) true )						  ( Air.Breathing ( *Air.Breathing ) true )						  ( Air.Break.1 ( *Air.Break.1 ) true )						  ( O2.Period.1 ( *O2.Period.1 ) true )						  ( Air.Break.2 ( *Air.Break.2 ) true )						  ( O2.Period.2 ( *O2.Period.2 ) true ) )	ifNotActors		( ( O2.Period.3 ( *O2.Period.3 ) true ) )	ifRelates			( ( located.in ( *patient *hyperbaric.chamber ) true )						  ( Holds.at ( *chamber.pressure *wound-healing.pressure ) true )						  ( begins ( *patient *Air.Breathing ) true ) )			thenCreate			( *O2.Breathing *O2.Period.3 )	thenActors			( ( O2.Breathing ( *O2.Breathing ) true )						  ( O2.Period.3 ( *O2.Period.3 ) true )						  ( Air.Breathing ( *Air.Breathing ) false ) )	thenRelates		( ( begins ( *patient *O2.Breathing ) true )						  ( begins ( *patient *Air.Breathing ) false ) )	thenSay			" Patient begins breathing 100% O2 at wound-healing pressure [Period 3]. "c:	Oxygen.Breathing.4	level				basic	subOf				phys.process	instanceOf			process.rule 	myCreator			rbt	context				HBO.wound.healing	ifActors			( ( patient ( *patient ) true )						  ( wound ( *wound ) true )						  ( hyperbaric.chamber ( *hyperbaric.chamber ) true )						  ( chamber.pressure ( *chamber.pressure ) true )						  ( wound-healing.pressure ( *wound-healing.pressure ) true )						  ( Air.Breathing ( *Air.Breathing ) true )						  ( Air.Break.1 ( *Air.Break.1 ) true )						  ( O2.Period.1 ( *O2.Period.1 ) true )						  ( Air.Break.2 ( *Air.Break.2 ) true )						  ( O2.Period.2 ( *O2.Period.2 ) true )						  ( Air.Break.3 ( *Air.Break.3 ) true )						  ( O2.Period.3 ( *O2.Period.3 ) true ) )	ifNotActors		( ( O2.Period.4 ( *O2.Period.4 ) true ) )	ifRelates			( ( located.in ( *patient *hyperbaric.chamber ) true )						  ( Holds.at ( *chamber.pressure *wound-healing.pressure ) true )						  ( begins ( *patient *Air.Breathing ) true ) )			thenCreate			( *O2.Breathing *O2.Period.4 )	thenActors			( ( O2.Breathing ( *O2.Breathing ) true )						  ( O2.Period.4 ( *O2.Period.4 ) true )						  ( Air.Breathing ( *Air.Breathing ) false ) )	thenRelates		( ( begins ( *patient *O2.Breathing ) true )						  ( begins ( *patient *Air.Breathing ) false ) )	thenSay			" Patient begins breathing 100% O2 at wound-healing pressure [Period 4]. "c:	Oxygen.Breathing.5	level				basic	subOf				phys.process	instanceOf			process.rule 	myCreator			rbt	context				HBO.wound.healing	ifActors			( ( patient ( *patient ) true )						  ( wound ( *wound ) true )						  ( hyperbaric.chamber ( *hyperbaric.chamber ) true )						  ( chamber.pressure ( *chamber.pressure ) true )						  ( wound-healing.pressure ( *wound-healing.pressure ) true )						  ( Air.Breathing ( *Air.Breathing ) true )						  ( Air.Break.1 ( *Air.Break.1 ) true )						  ( O2.Period.1 ( *O2.Period.1 ) true )						  ( Air.Break.2 ( *Air.Break.2 ) true )						  ( O2.Period.2 ( *O2.Period.2 ) true )						  ( Air.Break.3 ( *Air.Break.3 ) true )						  ( O2.Period.3 ( *O2.Period.3 ) true )						  ( Air.Break.4 ( *Air.Break.4 ) true )						  ( O2.Period.4 ( *O2.Period.4 ) true ) )	ifNotActors		( ( O2.Period.5 ( *O2.Period.5 ) true ) )	ifRelates			( ( located.in ( *patient *hyperbaric.chamber ) true )						  ( Holds.at ( *chamber.pressure *wound-healing.pressure ) true )						  ( begins ( *patient *Air.Breathing ) true ) )			thenCreate			( *O2.Breathing *O2.Period.5 )	thenActors			( ( O2.Breathing ( *O2.Breathing ) true )						  ( O2.Period.5 ( *O2.Period.5 ) true )						  ( Air.Breathing ( *Air.Breathing ) false ) )	thenRelates		( ( begins ( *patient *O2.Breathing ) true )						  ( begins ( *patient *Air.Breathing ) false ) )	thenSay			" Patient begins breathing 100% O2 at wound-healing pressure [Period 5]. "{  Probably not needed for the moment to get cycling.  Using begins.... *O2.Breathing.... abovec:	Oxygen.Breathing.1C	level				basic	subOf				phys.process	instanceOf			process.rule 	myCreator			rbt	context				HBO.wound.healing	ifActors			( ( patient ( *patient ) true )						  ( wound ( *wound ) true )						  ( hyperbaric.chamber ( *hyperbaric.chamber ) true )						  ( chamber.pressure ( *chamber.pressure ) true )						  ( normal.atmospheric.pressure ( *normal.atmospheric.pressure ) true )						  ( wound-healing.pressure ( *wound-healing.pressure ) true )						  ( O2.Breathing ( *O2.Breathing ) true ) )	ifRelates			( ( located.in ( *patient *hyperbaric.chamber ) true )						  ( Holds.at ( *chamber.pressure *wound-healing.pressure ) true )						  ( begins ( *patient *O2.Breathing ) true ) )	ifNotRelates		( ( continues ( *patient *O2.Breathing ) true ) )			thenRelates		( ( begins ( *patient *O2.Breathing ) false )						  ( continues ( *patient *O2.Breathing ) true ) )	thenSay			" Patient continues breathing 100% O2 at wound-healing pressure. "}c:	Air.Break.1	level				basic	subOf				phys.process	instanceOf			process.rule 	myCreator			rbt	context				HBO.wound.healing	ifActors			( ( patient ( *patient ) true )						  ( hyperbaric.chamber ( *hyperbaric.chamber ) true )						  ( chamber.pressure ( *chamber.pressure ) true )						  ( normal.atmospheric.pressure ( *normal.atmospheric.pressure ) true )						  ( wound-healing.pressure ( *wound-healing.pressure ) true )						  ( O2.Breathing ( *O2.Breathing ) true ) )	ifNotActors		( ( Air.Break.1 ( *Air.Break.1 ) true ) )	ifRelates			( ( located.in ( *patient *hyperbaric.chamber ) true )	 					  ( Holds.at ( *chamber.pressure *wound-healing.pressure ) true )						  ( begins ( *patient *O2.Breathing ) true ) )	thenCreate			( *Air.Breathing *Air.Break.1 )	thenActors			( ( Air.Breathing ( *Air.Breathing ) true )						  ( Air.Break.1 ( *Air.Break.1 ) true )						  ( O2.Breathing ( *O2.Breathing ) false ) )			thenRelates		( ( begins ( *patient *O2.Breathing ) false )						  ( begins ( *patient *Air.Breathing ) true ) )	thenSay			" Patient begins breathing air at wound-healing pressure [Air Break 1]. "c:	Air.Break.2	level				basic	subOf				phys.process	instanceOf			process.rule 	myCreator			rbt	context				HBO.wound.healing	ifActors			( ( patient ( *patient ) true )						  ( hyperbaric.chamber ( *hyperbaric.chamber ) true )						  ( chamber.pressure ( *chamber.pressure ) true )						  ( normal.atmospheric.pressure ( *normal.atmospheric.pressure ) true )						  ( wound-healing.pressure ( *wound-healing.pressure ) true )						  ( Air.Break.1 ( *Air.Break.1 ) true )						  ( O2.Breathing ( *O2.Breathing ) true )						  ( O2.Period.1 ( *O2.Period.1 ) true )						  						  ( O2.Period.2 ( *O2.Period.2 ) true ) )	ifNotActors		( ( Air.Break.2 ( *Air.Break.2 ) true ) )	ifRelates			( ( located.in ( *patient *hyperbaric.chamber ) true )	 					  ( Holds.at ( *chamber.pressure *wound-healing.pressure ) true )						  ( begins ( *patient *O2.Breathing ) true ) )	thenCreate			( *Air.Breathing *Air.Break.2 )	thenActors			( ( Air.Breathing ( *Air.Breathing ) true )						  ( Air.Break.2 ( *Air.Break.2 ) true )						  ( O2.Breathing ( *O2.Breathing ) false ) )			thenRelates		( ( begins ( *patient *O2.Breathing ) false )						  ( begins ( *patient *Air.Breathing ) true ) )	thenSay			" Patient begins breathing air at wound-healing pressure [Air Break 2]. "c:	Air.Break.3	level				basic	subOf				phys.process	instanceOf			process.rule 	myCreator			rbt	context				HBO.wound.healing	ifActors			( ( patient ( *patient ) true )						  ( hyperbaric.chamber ( *hyperbaric.chamber ) true )						  ( chamber.pressure ( *chamber.pressure ) true )						  ( normal.atmospheric.pressure ( *normal.atmospheric.pressure ) true )						  ( wound-healing.pressure ( *wound-healing.pressure ) true )						  ( Air.Break.1 ( *Air.Break.1 ) true )						  ( Air.Break.2 ( *Air.Break.2 ) true )						  ( O2.Breathing ( *O2.Breathing ) true )						  ( O2.Period.1 ( *O2.Period.1 ) true )						  						  ( O2.Period.2 ( *O2.Period.2 ) true )						  ( O2.Period.3 ( *O2.Period.3 ) true ) )	ifNotActors		( ( Air.Break.3 ( *Air.Break.3 ) true ) )	ifRelates			( ( located.in ( *patient *hyperbaric.chamber ) true )	 					  ( Holds.at ( *chamber.pressure *wound-healing.pressure ) true )						  ( begins ( *patient *O2.Breathing ) true ) )	thenCreate			( *Air.Breathing *Air.Break.3 )	thenActors			( ( Air.Breathing ( *Air.Breathing ) true )						  ( Air.Break.3 ( *Air.Break.3 ) true )						  ( O2.Breathing ( *O2.Breathing ) false ) )			thenRelates		( ( begins ( *patient *O2.Breathing ) false )						  ( begins ( *patient *Air.Breathing ) true ) )	thenSay			" Patient begins breathing air at wound-healing pressure [Air Break 3]. "c:	Air.Break.4	level				basic	subOf				phys.process	instanceOf			process.rule 	myCreator			rbt	context				HBO.wound.healing	ifActors			( ( patient ( *patient ) true )						  ( hyperbaric.chamber ( *hyperbaric.chamber ) true )						  ( chamber.pressure ( *chamber.pressure ) true )						  ( normal.atmospheric.pressure ( *normal.atmospheric.pressure ) true )						  ( wound-healing.pressure ( *wound-healing.pressure ) true )						  ( Air.Break.1 ( *Air.Break.1 ) true )						  ( Air.Break.2 ( *Air.Break.2 ) true )						  ( Air.Break.3 ( *Air.Break.3 ) true )						  ( O2.Breathing ( *O2.Breathing ) true )						  ( O2.Period.1 ( *O2.Period.1 ) true )						  						  ( O2.Period.2 ( *O2.Period.2 ) true )						  ( O2.Period.3 ( *O2.Period.3 ) true )						  ( O2.Period.4 ( *O2.Period.4 ) true ) )	ifNotActors		( ( Air.Break.4 ( *Air.Break.4 ) true ) )	ifRelates			( ( located.in ( *patient *hyperbaric.chamber ) true )	 					  ( Holds.at ( *chamber.pressure *wound-healing.pressure ) true )						  ( begins ( *patient *O2.Breathing ) true ) )	thenCreate			( *Air.Breathing *Air.Break.4 )	thenActors			( ( Air.Breathing ( *Air.Breathing ) true )						  ( Air.Break.4 ( *Air.Break.4 ) true )						  ( O2.Breathing ( *O2.Breathing ) false ) )			thenRelates		( ( begins ( *patient *O2.Breathing ) false )						  ( begins ( *patient *Air.Breathing ) true ) )	thenSay			" Patient begins breathing air at wound-healing pressure [Air Break 4]. "c:	Air.Break.5	level				basic	subOf				phys.process	instanceOf			process.rule 	myCreator			rbt	context				HBO.wound.healing	ifActors			( ( patient ( *patient ) true )						  ( hyperbaric.chamber ( *hyperbaric.chamber ) true )						  ( chamber.pressure ( *chamber.pressure ) true )						  ( normal.atmospheric.pressure ( *normal.atmospheric.pressure ) true )						  ( wound-healing.pressure ( *wound-healing.pressure ) true )						  ( Air.Break.1 ( *Air.Break.1 ) true )						  ( Air.Break.2 ( *Air.Break.2 ) true )						  ( Air.Break.3 ( *Air.Break.3 ) true )						  ( Air.Break.4 ( *Air.Break.4 ) true )						  ( O2.Breathing ( *O2.Breathing ) true )						  ( O2.Period.1 ( *O2.Period.1 ) true )						  						  ( O2.Period.2 ( *O2.Period.2 ) true )						  ( O2.Period.3 ( *O2.Period.3 ) true )						  ( O2.Period.4 ( *O2.Period.4 ) true )						  ( O2.Period.5 ( *O2.Period.5 ) true ) )	ifNotActors		( ( Air.Break.5 ( *Air.Break.5 ) true ) )	ifRelates			( ( located.in ( *patient *hyperbaric.chamber ) true )	 					  ( Holds.at ( *chamber.pressure *wound-healing.pressure ) true )						  ( begins ( *patient *O2.Breathing ) true ) )	thenCreate			( *Air.Breathing *Air.Break.5 )	thenActors			( ( Air.Breathing ( *Air.Breathing ) true )						  ( Air.Break.5 ( *Air.Break.5 ) true )						  ( O2.Breathing ( *O2.Breathing ) false ) )			thenRelates		( ( begins ( *patient *O2.Breathing ) false )						  ( begins ( *patient *Air.Breathing ) true ) )	thenSay			" Patient begins breathing air at wound-healing pressure [Air Break 5]. "\ ------------------------------------------------- WOUND/TISSUE OXYGENATION RULESc:	Wound.O2.Increase.1	level				basic	subOf				phys.process	instanceOf			process.rule 	myCreator			rbt	context				HBO.wound.healing	ifActors			( ( patient ( *patient ) true )						  ( O2.Breathing ( *O2.Breathing ) true )						  ( wound.periphery ( *wound.periphery ) true )						  ( wound.periphery.PO2 ( *wound.periphery.PO2 ) true )						  ( wound.marginal.zone ( *wound.marginal.zone ) true )						  ( wound.marginal.zone.PO2 ( *wound.marginal.zone.PO2 ) true )						  ( wound-healing.pressure ( *wound-healing.pressure ) true )						  ( chamber.pressure ( *chamber.pressure ) true ) )	ifRelates			( ( begins ( *patient *O2.Breathing ) true )						  ( Holds.at ( *chamber.pressure *wound-healing.pressure ) true ) )	if.not.states		( ( suprathreshold ( *wound.periphery.PO2 ) true )						  ( subthreshold ( *wound.marginal.zone.PO2 ) true ) )	then.states			( ( suprathreshold ( *wound.periphery.PO2 ) true )						  ( subthreshold ( *wound.marginal.zone.PO2 ) true ) )	thenSay			" PO2 in wound periphery rises above wound-healing threshold. " c:	Wound.O2.Decrease.1	level				basic	subOf				phys.process	instanceOf			process.rule 	myCreator			rbt	context				HBO.wound.healing	ifActors			( ( patient ( *patient ) true )						  ( Air.Breathing ( *Air.Breathing ) true )						  ( wound.periphery.PO2 ( *wound.periphery.PO2 ) true )						  ( wound-healing.pressure ( *wound-healing.pressure ) true )						  ( chamber.pressure ( *chamber.pressure ) true )						  ( *Air.Break.1 ( *Air.Break.1 ) true ) )	ifRelates			( ( begins ( *patient *Air.Breathing ) true )						  ( Holds.at ( *chamber.pressure *wound-healing.pressure ) true ) )	if.states			( ( suprathreshold ( *wound.periphery.PO2 ) true ) )	then.states			( ( subthreshold ( *wound.periphery.PO2 ) true )						  ( suprathreshold ( *wound.periphery.PO2 ) false ) )	thenSay			" PO2 in wound periphery falls below wound-healing threshold. "	c:	Neovasc.oxygenation.1	level				basic	subOf				phys.process	instanceOf			process.rule 	myCreator			rbt	context				HBO.wound.healing	ifActors			( ( wound.periphery ( *wound.periphery ) true )						  ( wound.marginal.zone ( *wound.marginal.zone ) true )						  ( wound.periphery.PO2 ( *wound.periphery.PO2 ) true )						  ( wound.marginal.zone.PO2 ( *wound.marginal.zone.PO2 ) true )						  ( capillary.network ( *capillary.network ) true )						  ( capillary.network.ma ( *capillary.network.ma ) true ) )	if.not.states		( ( suprathreshold ( *wound.marginal.zone.PO2 ) true ) )	ifRelates			( ( located.in ( *capillary.network *wound.periphery ) true )						  ( located.in ( *capillary.network.ma *wound.periphery ) true ) )			then.states			( ( suprathreshold ( *wound.periphery.PO2 ) true ) 						  ( suprathreshold ( *wound.marginal.zone.PO2 ) true ) )	thenSay		" Peripheral and marginal capillary networks maintain pO2 threshold levels ." \ -------------------------------------------------Macrophage activation rulesc:	Periph.Macro.activation	level				basic	subOf				phys.process	instanceOf			process.rule 	myCreator			rbt	context				HBO.wound.healing	ifActors			( ( macrophage ( *macrophage ) true )						  ( wound.periphery ( *wound.periphery ) true )						  ( wound.periphery.PO2 ( *wound.periphery.PO2 ) true ) )	ifRelates			( ( located.in ( *macrophage *wound.periphery ) true ) )	if.states			( ( suprathreshold ( *wound.periphery.PO2 ) true ) )	thenCreate			( *activated.macrophage.P *angiogenic.factor *fibronectin ) 			thenActors			( ( activated.macrophage.P ( *activated.macrophage.P ) true )				 	 	  ( angiogenic.factor ( *angiogenic.factor ) true )				  		  ( fibronectin ( *fibronectin ) true )					  		  ( macrophage ( *macrophage ) false ) )	thenRelates		( ( located.in ( *activated.macrophage.P *wound.periphery ) true )						  (	contains ( *activated.macrophage.P *fibronectin ) true )						  (	contains ( *activated.macrophage.P *angiogenic.factor ) true )						  ( located.in ( *macrophage *wound.periphery ) false ) )	thenSay			" Macrophage activated in periphery of wound. " c:	Marginal.Macro.activation	level			basic	subOf			phys.process	instanceOf		process.rule 	myCreator		rbt	context			HBO.wound.healing	ifActors			( ( macrophage ( *macrophage ) true )						  ( wound.marginal.zone ( *wound.marginal.zone ) true )						  ( wound.marginal.zone.PO2 ( *wound.marginal.zone.PO2 ) true ) )	ifRelates			( ( located.in ( *macrophage *wound.marginal.zone ) true ) )	if.states			( ( suprathreshold ( *wound.marginal.zone.PO2 ) true ) )	thenCreate			( *activated.macrophage.ma *angiogenic.factor *fibronectin )	thenActors			( ( activated.macrophage.ma ( *activated.macrophage.ma ) true )						  ( angiogenic.factor ( *angiogenic.factor ) true )				  		  ( fibronectin ( *fibronectin ) true )				  		  ( macrophage ( *macrophage ) false ) )	thenRelates		( ( located.in ( *activated.macrophage.ma *wound.marginal.zone ) true )						  ( contains ( *activated.macrophage.ma *fibronectin ) true )						  (	contains ( *activated.macrophage.ma *angiogenic.factor ) true ) 						  ( located.in ( *macrophage *wound.marginal.zone ) false) )	thenSay			" Macrophage activated in marginal region of wound. " c:	Mid.Area.Macro.activation	level			basic	subOf			phys.process	instanceOf		process.rule 	myCreator		rbt	context				HBO.wound.healing	ifActors			( ( macrophage ( *macrophage ) true )						  ( wound.mid.area ( *wound.mid.area ) true )						  ( wound.mid.area.PO2 ( *wound.mid.area.PO2 ) true ) )	ifRelates			( ( located.in ( *macrophage *wound.mid.area ) true ) )	if.states			( ( suprathreshold ( *wound.mid.area.PO2 ) true ) )	thenCreate			( *activated.macrophage.mi *angiogenic.factor *fibronectin )	thenActors			( ( activated.macrophage.mi ( *activated.macrophage.mi ) true ) 						  ( angiogenic.factor ( *angiogenic.factor ) true )				  		  ( fibronectin ( *fibronectin ) true )					  		  ( macrophage ( *macrophage ) false ) )	thenRelates		( ( located.in ( *activated.macrophage.mi *wound.mid.area ) true ) 						  ( contains ( *activated.macrophage.mi *fibronectin ) true )						  (	contains ( *activated.macrophage.mi *angiogenic.factor ) true ) 						  ( located.in ( *macrophage *wound.mid.area ) false ) )	thenSay			" Macrophage activated in the mid-region of the wound. " 	\ -------------------------------------------------Cell Migration Rulesc:	Periph.Macro.migration1	level				basic	subOf				phys.process	instanceOf			process.rule 	myCreator			rbt	context				HBO.wound.healing	ifActors			( ( activated.macrophage.P ( *activated.macrophage.P ) true )						  ( wound.periphery ( *wound.periphery ) true )						  ( wound.marginal.zone ( *wound.marginal.zone ) true )						  ( wound.marginal.zone.PO2 ( *wound.marginal.zone.PO2 ) true )						  ( wound.periphery.PO2 ( *wound.periphery.PO2 ) true ) )	ifRelates			( ( located.in ( *activated.macrophage.P *wound.periphery ) true ) )	if.states			( ( suprathreshold ( *wound.periphery.PO2 ) true )						  ( subthreshold ( *wound.marginal.zone.PO2 ) true ) )	thenRelates		( ( Migrates.to ( *activated.macrophage.P *wound.marginal.zone ) true )						  ( located.in ( *activated.macrophage.P *wound.marginal.zone ) true ) 						  ( located.in ( *activated.macrophage.P *wound.periphery ) false ) )		  	thenSay			" Activated macrophage migrates from wound periphery to the marginal zone of the wound. " c:	Marginal.Macro.migration1	level				basic	subOf				phys.process	instanceOf			process.rule 	myCreator			rbt	context				HBO.wound.healing	ifActors			( ( activated.macrophage.ma ( *activated.macrophage.ma ) true )						  ( wound.marginal.zone ( *wound.marginal.zone ) true )						  ( wound.mid.area ( *wound.mid.area ) true )						  ( wound.marginal.zone.PO2 ( *wound.marginal.zone.PO2 ) true )						  ( wound.mid.area.PO2 ( *wound.mid.area.PO2 ) true ) )	ifRelates			( ( located.in ( *activated.macrophage.ma *wound.marginal.zone ) true ) )	if.states			( ( suprathreshold ( *wound.marginal.zone.PO2 ) true )						  ( subthreshold ( *wound.mid.area.PO2 ) true ) )	thenRelates		( ( Migrates.to ( *activated.macrophage.ma *wound.mid.area ) true )					 	  ( located.in ( *activated.macrophage.ma *wound.mid.area ) true ) 					 	  ( located.in ( *activated.macrophage.ma *wound.marginal.zone ) false) )	thenSay			" Activated macrophage migrates from the marginal zone to the mid-region of the the wound. " c:	Mid-region.macro.migration1	level				basic	subOf				phys.process	instanceOf			process.rule 	myCreator			rbt	context				HBO.wound.healing	ifActors			( ( activated.macrophage.mi ( *activated.macrophage.mi ) true )						  ( wound.mid.area ( *wound.mid.area ) true ) 						  ( wound.center ( *wound.center ) true )						  ( wound.mid.area.PO2 ( *wound.mid.area.PO2 ) true ) 						  ( wound.center.PO2 ( *wound.center.PO2 ) true ) )	ifRelates			( ( located.in ( *activated.macrophage.mi *wound.mid.area ) true ) )	if.states			( ( suprathreshold ( *wound.mid.area.PO2 ) true ) 						  ( subthreshold ( *wound.center.PO2 ) true ) )	thenRelates		( ( Migrates.to ( *activated.macrophage.mi *wound.center ) true )						  ( located.in ( *activated.macrophage.mi *wound.center ) true ) 						  ( located.in ( *activated.macrophage.mi *wound.mid.area ) false ) )	thenSay			" Activated macrophage migrates from the mid-region of the the wound to the central area. " 	\ -------------------------------------------------Macrophage secretion rulesc:	Periph.Macro.secretion1	level			basic	subOf			phys.process	instanceOf		process.rule 	myCreator		rbt	context			HBO.wound.healing	ifActors		( ( activated.macrophage.P ( *activated.macrophage.P ) true )				  	  ( angiogenic.factor ( *angiogenic.factor ) true )				  	  ( fibronectin ( *fibronectin ) true )				  	  					  ( wound.periphery ( *wound.periphery ) true )					  ( wound.marginal.zone ( *wound.marginal.zone ) true )					  ( wound.marginal.zone.PO2 ( *wound.marginal.zone.PO2 ) true ) )	ifRelates		( ( located.in ( *activated.macrophage.P *wound.marginal.zone ) true )					  (	contains ( *activated.macrophage.P *fibronectin ) true )					  (	contains ( *activated.macrophage.P *angiogenic.factor ) true  ) )	if.states		( ( subthreshold ( *wound.marginal.zone.PO2 ) true ) )	ifNotRelates	( ( secretes ( *activated.macrophage.P  *fibronectin ) true )					  ( secretes ( *activated.macrophage.P  *angiogenic.factor ) true ) )	thenRelates	( ( secretes ( *activated.macrophage.P  *fibronectin ) true )					  ( secretes ( *activated.macrophage.P  *angiogenic.factor ) true )					  (	contains ( *wound.marginal.zone *fibronectin ) true )					  ( contains ( *wound.marginal.zone *angiogenic.factor ) true ) )			  	thenSay		" Activated macrophage secretes fibronectin and angiogenesis factor into the marginal zone of the wound. " c:	Marginal.Macro.secretion1	level			basic	subOf			phys.process	instanceOf		process.rule 	myCreator		rbt	context			HBO.wound.healing	ifActors		( ( activated.macrophage.ma ( *activated.macrophage.ma ) true )				  	  ( angiogenic.factor ( *angiogenic.factor ) true )				  	  ( fibronectin ( *fibronectin ) true )				  	  					  ( wound.marginal.zone ( *wound.marginal.zone ) true ) 					  ( wound.mid.area ( *wound.mid.area ) true ) )	ifRelates		( ( located.in ( *activated.macrophage.ma *wound.mid.area ) true )					  (	contains ( *activated.macrophage.ma *fibronectin ) true )					  (	contains ( *activated.macrophage.ma *angiogenic.factor ) true  ) )	if.states		( ( subthreshold ( *wound.mid.area.PO2 ) true ) )	thenRelates	( ( secretes ( *activated.macrophage.ma  *fibronectin ) true )					  ( secretes ( *activated.macrophage.ma  *angiogenic.factor ) true )					  (	contains ( *wound.mid.area *fibronectin ) true )					  ( contains ( *wound.mid.area *angiogenic.factor ) true ) )			  	thenSay		" Activated macrophage secretes fibronectin and angiogenesis factor into the mid-area of the wound. " c:	Mid-region.Macro.secretion1	level			basic	subOf			phys.process	instanceOf		process.rule 	myCreator		rbt	context			HBO.wound.healing	ifActors		( ( activated.macrophage.mi ( *activated.macrophage.mi ) true )				  	  ( angiogenic.factor ( *angiogenic.factor ) true )				  	  ( fibronectin ( *fibronectin ) true )				  	   					  ( wound.mid.area ( *wound.mid.area ) true )					  ( wound.center ( *wound.center ) true )					  ( wound.center.PO2 ( *wound.center.PO2 ) true ) )	ifRelates		( ( located.in ( *activated.macrophage.mi *wound.center ) true )					  (	contains ( *activated.macrophage.mi *fibronectin ) true )					  (	contains ( *activated.macrophage.mi *angiogenic.factor ) true  ) )	if.states		( ( subthreshold ( *wound.center.PO2 ) true ) )	thenRelates	( ( secretes ( *activated.macrophage.mi *fibronectin ) true )					  ( secretes ( *activated.macrophage.mi *angiogenic.factor ) true )					  (	contains ( *wound.center *fibronectin ) true )					  ( contains ( *wound.center *angiogenic.factor ) true ) )			  	thenSay		" Activated macrophage secretes fibronectin and angiogenesis factor into the central area of the wound. " \ -------------------------------------------------Macrophage deactivation rules	c:	Periph.Macro.deactivation1	level				basic	subOf				phys.process	instanceOf			process.rule 	myCreator			rbt	context				HBO.wound.healing	ifActors			( ( activated.macrophage.P ( *activated.macrophage.P ) true )				  		  ( angiogenic.factor ( *angiogenic.factor ) true )				  		  ( fibronectin ( *fibronectin ) true )				  	  						  ( wound.periphery ( *wound.periphery ) true )						  ( wound.marginal.zone ( *wound.marginal.zone ) true )						  ( wound.marginal.zone.PO2 ( *wound.marginal.zone.PO2 ) true ) )	ifNotActors		( ( macrophage ( *macrophage ) true ) )	ifRelates			( ( located.in ( *activated.macrophage.P *wound.marginal.zone ) true )						  ( secretes ( *activated.macrophage.P  *fibronectin ) true )						  ( secretes ( *activated.macrophage.P  *angiogenic.factor ) true ) )	if.states			( ( subthreshold ( *wound.marginal.zone.PO2 ) true ) )	thenCreate			( *macrophage )	thenActors			( ( macrophage ( *macrophage ) true )						  ( activated.macrophage.P ( *activated.macrophage.P ) false ) )	thenRelates		( ( located.in ( *macrophage *wound.marginal.zone ) true ) 						  ( located.in ( *activated.macrophage.P *wound.marginal.zone ) false )					 	  ( secretes ( *activated.macrophage.P  *fibronectin ) false )					 	  ( secretes ( *activated.macrophage.P  *angiogenic.factor ) false ) )			  	thenSay		" Activated macrophage deactivated in the marginal zone of the wound. " c:	Marginal.Macro.deactivation1	level				basic	subOf				phys.process	instanceOf			process.rule 	myCreator			rbt	context				HBO.wound.healing	ifActors			( ( activated.macrophage.ma ( *activated.macrophage.ma ) true )				  		  ( angiogenic.factor ( *angiogenic.factor ) true )				  	 	  ( fibronectin ( *fibronectin ) true )				  	  					 	  ( wound.marginal.zone ( *wound.marginal.zone ) true )						  ( wound.mid.area ( *wound.mid.area ) true )						  ( wound.mid.area.PO2 ( *wound.mid.area.PO2 ) true ) )	ifNotActors		( ( macrophage ( *macrophage ) true ) )	ifRelates			( ( located.in ( *activated.macrophage.ma *wound.mid.area ) true )						  ( secretes ( *activated.macrophage.ma  *fibronectin ) true )						  ( secretes ( *activated.macrophage.ma  *angiogenic.factor ) true ) )	if.states			( ( subthreshold ( *wound.mid.area.PO2 ) true ) )	thenActors			( ( macrophage ( *macrophage ) true ) 						  ( activated.macrophage.ma ( *activated.macrophage.ma ) false ) )	thenRelates		( ( located.in ( *macrophage *wound.mid.area ) true ) 						  ( located.in ( *activated.macrophage.ma *wound.mid.area ) false )						  ( secretes ( *activated.macrophage.ma  *fibronectin ) false )					  	  ( secretes ( *activated.macrophage.ma  *angiogenic.factor ) false ) )			  	thenSay		" Activated macrophage deactivated in the mid-area of the wound." c:	Mid-region.Macro.deactivation1	level				basic	subOf				phys.process	instanceOf			process.rule 	myCreator			rbt	context				HBO.wound.healing	ifActors			( ( activated.macrophage.mi ( *activated.macrophage.mi ) true )					  	  ( angiogenic.factor ( *angiogenic.factor ) true )					  	  ( fibronectin ( *fibronectin ) true )				  	  						  ( wound.mid.area ( *wound.mid.area ) true ) 						  ( wound.center ( *wound.center ) true )						  ( wound.center.PO2 ( *wound.center.PO2 ) true ) )	ifNotActors		( ( macrophage ( *macrophage ) true ) )	ifRelates			( ( located.in ( *activated.macrophage.mi *wound.center ) true )						  ( secretes ( *activated.macrophage.mi  *fibronectin ) true )						  ( secretes ( *activated.macrophage.mi  *angiogenic.factor ) true ) )	if.states			( ( subthreshold ( *wound.center.PO2 ) true ) )	thenActors			( ( macrophage ( *macrophage ) true ) 						  ( activated.macrophage.mi ( *activated.macrophage.mi) false ) ) 	thenRelates		( ( located.in ( *macrophage *wound.center ) true ) 						  ( located.in ( *activated.macrophage.mi *wound.center ) false )						  ( secretes ( *activated.macrophage.mi  *fibronectin ) false )						  ( secretes ( *activated.macrophage.mi  *angiogenic.factor ) false ) )			  	thenSay			" Activated macrophage deactivated in the central region of the wound." \ -------------------------------------------------Fibroblast migration rules\ -------------------------------------------------Angiogenesis rulesc:	Periph.neovasc.1	level				basic	subOf				phys.process	instanceOf			process.rule 	myCreator			rbt	context				HBO.wound.healing	ifActors			( ( capillary.network ( *capillary.network ) true )						  ( wound.periphery ( *wound.periphery ) true )						  ( wound.marginal.zone ( *wound.marginal.zone ) true )						  ( wound.periphery.PO2 ( *wound.periphery.PO2 ) true )						  ( wound.marginal.zone.PO2 ( *wound.marginal.zone.PO2 ) true )						  ( angiogenic.factor ( *angiogenic.factor ) true ) )	ifNotActors		( ( capillary.sprouting ( *capillary.sprouting ) true )					  	  ( angioblast ( *angioblast ) true ) )	ifRelates			( ( located.in ( *capillary.network *wound.periphery ) true )						  ( contains ( *wound.marginal.zone *angiogenic.factor ) true ) )	if.states			( ( suprathreshold ( *wound.periphery.PO2 ) true )						  ( subthreshold ( *wound.marginal.zone.PO2 ) true ) )	thenCreate			( *capillary.sprouting *angioblast ) 			thenActors			( ( capillary.sprouting ( *capillary.sprouting ) true )					  	  ( angioblast ( *angioblast ) true ) )	thenRelates		( ( Migrates.to ( *angioblast *wound.marginal.zone ) true )						  (	contains ( *wound.marginal.zone *angioblast ) true ) )	thenSay		" Peripheral capillary sprouts, and angioblast moves to wound marginal zone." c:	Marginal.neovasc.1	level				basic	subOf				phys.process	instanceOf			process.rule 	myCreator			rbt	context				HBO.wound.healing	ifActors			( ( capillary.network ( *capillary.network ) true )						  ( wound.periphery ( *wound.periphery ) true )						  ( wound.marginal.zone ( *wound.marginal.zone ) true )						  ( wound.periphery.PO2 ( *wound.periphery.PO2 ) true )						  ( wound.marginal.zone.PO2 ( *wound.marginal.zone.PO2 ) true )						  ( angiogenic.factor ( *angiogenic.factor ) true )						  ( capillary.sprouting ( *capillary.sprouting ) true )					  	  ( angioblast ( *angioblast ) true ) )	ifNotActors		( ( capillary.network.ma ( *capillary.network.ma ) true ) )	ifRelates			( ( located.in ( *capillary.network *wound.periphery ) true )						  ( contains ( *wound.marginal.zone *angiogenic.factor ) true )						  ( migrates.to ( *angioblast *wound.marginal.zone ) true )						  (	contains ( *wound.marginal.zone *angioblast ) true ) )	thenCreate			( *capillary.network.ma ) 			thenActors			( ( capillary.network.ma ( *capillary.network.ma ) true )						  ( capillary.sprouting ( *capillary.sprouting ) false )					  	  ( angioblast ( *angioblast ) false ) )	thenRelates		( ( Migrates.to ( *angioblast *wound.marginal.zone ) false )						  (	contains ( *wound.marginal.zone *angioblast ) false )						  ( located.in ( *capillary.network.ma *wound.periphery ) true ) )	thenSay		" Capillary network established in wound marginal zone." {	======================= re/move comment brackets when rules ready !!!	======================= re/move comment brackets when rules ready !!! }{ SLOT SCRAPHEAP =================================================>>				  			<<=================================================	SLOT SCRAPHEAP	  }											  		