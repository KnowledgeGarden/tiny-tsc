{		Phagocytosis.KB				changes		2/8/95		start up												}\ =====================================================\   Phagocytosis.KB\ =====================================================c:	phagocyte.binds.particle	level		basic	sub.of		phys.process	instance.of	process.rule popsim.rule	my.creator	JAR	context		immunology	if.actors		( ( phagocyte ( *phagocyte ) true ) 						( particle ( *particle ) true ) )	if.relates		( ( abuts ( *phagocyte *particle ) true ) )	if.not.relates		( ( binds ( *phagocyte *particle ) true ) ) 	then.relates		( ( binds ( *phagocyte *particle ) true ) ) 	then.say 		"Phagocyte binds particle"	c:	phagocyte.engulfs.particle	level		basic	sub.of		phys.process	instance.of	process.rule popsim.rule	my.creator	JAR	context		immunology	if.actors		( ( phagocyte ( *phagocyte ) true )						( particle ( *particle ) true ) ) 	if.relates		( ( binds ( *phagocyte *particle ) true ) )	if.not.actors	( ( phagosome ( *phagosome ) true ) ) 	then.create    	( *phagosome )	then.actors		( ( phagosome ( *phagosome ) true ) )	then.states		( ( contains (  *phagosome *particle ) true ) ) 	then.say		"Phagosome contains engulfed particle"	c:	adhere->abuts	level		basic	sub.of		phys.process	instance.of	sense.rule	my.creator	JAR	context		immunology	if.actors		( ( thing ( *t1 ) true )						( thing ( *t2 ) true ) ) 	if.relates		( ( adhere ( *t1 *t2 ) true ) ) 	then.relates		( ( abuts ( *t1 *t2 ) true ) ) c:	lysosome.migrates.to.phagosome	level		basic	sub.of		phys.process	instance.of	process.rule popsim.rule	my.creator	JAR	context		immunology	if.actors		( ( lysosome ( *lysosome ) true )						( phagosome ( *phagosome ) true ) )	if.not.relates		( ( abuts ( *lysosome *phagosome ) true ) )	then.relates		( ( abuts ( *lysosome *phagosome ) true ) )	then.say		"Lysosome migrates to phagosome"	c:	lysosome.fusion.with.phagosome	level		basic	sub.of		phys.process	instance.of	process.rule popsim.rule	my.creator	JAR	context		immunology	if.actors		( ( lysosome ( *lysosome ) true )						(  phagosome ( *phagosome ) true )						( particle ( *particle ) true ) )	if.relates		( ( abuts ( *lysosome *phagosome ) true ) )	if.states		( ( contains (  *phagosome *particle ) true ) ) 	if.not.actors	( ( phagolysosome ( *phagolysosome ) true ) )	then.create		( *phagolysosome )	then.actors		( ( phagolysosome ( *phagolysosome ) true ) )	then.states		( ( contains (  *phagolysosome *particle ) true ) ) 	then.relates	( (fusion.with ( *lysosme *phagosome ) true ) )	then.say		"Phagolysosome formed"	c:	phagolysosome.releases.enzyme	level		basic	sub.of		phys.process	instance.of	process.rule popsim.rule	my.creator	JAR	context		immunology	if.actors		( ( phagolysosome ( *phagolysosome ) true )						( particle ( *particle ) true ) )	if.not.actors	( ( enzyme ( *enzyme ) true ) )	if.states		( ( contains (  *phagolysosome *particle ) true ) ) 	then.create		( *enzyme ) 	then.actors		( ( enzyme ( *enzyme ) true ) )	then.relates	( ( releases ( *phagolysosome *enzyme ) true )						( abuts ( *enzyme *particle ) true ) )	then.say		"Phagolysosome releases enzyme"	c:	enzyme.digests.particle	level		basic	sub.of		phys.process	instance.of	process.rule popsim.rule	my.creator	JAR	context		immunology	if.actors		( ( enzyme ( *enzyme ) true ) 						( particle ( *particle ) true ) )	if.relates		( ( abuts ( *enzyme *particle ) true ) ) 		then.relates	( ( digests ( *enzyme *particle ) true ) )	then.actors		( ( particle ( *particle ) false ) )	then.say		"Enzyme digests & destroys particle"		  												