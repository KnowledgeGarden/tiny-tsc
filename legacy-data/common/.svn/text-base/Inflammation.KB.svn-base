{ 		Inflammation.KB 							2/17/95			startup  							 							}c:	invader.breaks.barrier		level		basic	subOf		phys.process	instanceOf	process.rule  	myCreator	JAR	context		immunology	ifActors	( ( invader ( *invader ) true )					( bio.cell ( *x ) true )					( serum.protein ( *serum.protein ) true )					  ( barrier ( *barrier ) true ) )	ifRelates		( ( breaks ( *invader *barrier ) true ) )	ifNotActors	( ( injury ( *injury ) true ) )	thenCreate		( *injury )	thenActors		( ( injury ( *injury ) true ) ) 	thenStates		( ( exudes ( *injury *serum.protein ) true ) )	thenSay		"invader causes exudation"	c:	invader.causes.edema			 	level		basic	subOf		phys.process	instanceOf	process.rule  	myCreator	JAR	context		immunology	ifActors	( ( invader ( *invader ) true )					( bio.cell ( *x ) true )					( serum.protein ( *serum.protein ) true ) 					( injury ( *injury ) true ) )	ifNotStates	( ( has.edema ( *injury ) true ) ) 	thenStates		( ( has.edema ( *injury ) true ) ) 	thenSay	"exudation causes edema"{	c:	phagocyte.migration.I 	level		basic	subOf		phys.process	instanceOf	process.rule  	myCreator	JAR	context		immunology	ifActors	( ( phagocyte ( *phagocyte ) true )					( invader ( *invader ) true ) )	thenRelates	( ( abuts ( *phagocyte *invader ) true ) )	thenSay		"phagocyte.migration occurs"}	c:	phagocyte.diapedesis	level		basic	subOf		phys.process	instanceOf	process.rule  	myCreator	JAR	ifActors	( ( phagocyte ( *phagocyte ) true )					( injury ( *injury ) true )					( invader ( *invader ) true ) )	ifNotRelates	( ( migrates.to ( *phagocyte *injury ) true ) )	thenRelates	( ( migrates.to ( *phagocyte *injury ) true )					( abuts ( *phagocyte *invader) true )					( binds ( *phagocyte *invader) true ) )	thenSay	"phagocyte migrates to site of invader"		{	c:	phagocyte.abuts.particle	level		basic	subOf		phys.process	instanceOf	process.rule  	myCreator	JAR	context		immunology	ifActors		( ( phagocyte ( *phagocyte ) true ) 						( particle ( *particle ) true ) )	ifRelates		( ( abuts ( *phagocyte *particle ) true ) )	ifNotRelates		( ( binds ( *phagocyte *particle ) true ) ) 	thenRelates		( ( binds ( *phagocyte *particle ) true ) ) 	thenSay 		"Phagocyte binds particle"	}																									